{"version":3,"sources":["Card.jsx","images/ss.gif","images/stld.gif","Fifth.jsx","images/database.gif","images/os.gif","images/clab.gif","Sixth.jsx","images/dda.gif","images/dsp.gif","images/ooad.gif","Seventh.jsx","Menu.jsx","images/Home.svg","Home.jsx","List.jsx","5thSem/ss/SSlist.jsx","ProgramTemp.jsx","5thSem/images5th/SS Practical 1 a.jpeg","5thSem/images5th/SS Practical 1 b.jpeg","5thSem/images5th/SS Practical 2.jpeg","5thSem/images5th/SS Practical 3.jpeg","5thSem/images5th/SS Practical 4.jpeg","5thSem/images5th/SS Practical 6.jpeg","5thSem/images5th/SS Practical 7.jpeg","5thSem/images5th/SS Practical 8.jpeg","5thSem/ss/Prac1a.jsx","5thSem/stld/STLDlist.jsx","5thSem/images5th/STLD Practical 1.jpg","5thSem/images5th/STLD Practical 2.jpg","5thSem/images5th/STLD Practical 3.jpg","5thSem/images5th/STLD Practical 4.jpeg","5thSem/images5th/STLD Practical 5.jpg","5thSem/images5th/STLD Practical 6.jpg","5thSem/images5th/STLD Practical 7.jpg","5thSem/images5th/STLD Practical 8.jpg","5thSem/stld/StldPrac1.jsx","App.js","index.js"],"names":["Card","props","className","exact","to","link","src","imgsrc","alt","title","Fifth","SS","STLD","Sixth","DBS","OS","CLAB","Seventh","DSP","DDA","OOAD","Menu","activeClassName","type","id","Home","style","height","color","home","class","List","prac","fontSize","aim","SSlist","ProgramTemp","pracName","code","pracimg","Prac1b","img1b","Prac2","img2","Prac3","img3","Prac4","img4","Prac6","img6","Prac7","img7","Prac8","img8","prac1a","img1","STLDlist","StldPrac2","StldPrac3","StldPrac4","StldPrac5","img5","StldPrac6","StldPrac7","StldPrac8","StldPrac1","App","path","Prac1a","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.564efd0e.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction Card(props) {\r\n    return (\r\n        \r\n<div className=\"card\" >\r\n<NavLink exact to={props.link}>\r\n  <img src={props.imgsrc} className=\"card-img-top\" alt=\"subject-img\"/>\r\n  <div className=\"card-body\">\r\n    <h5 className=\"card-title\">{props.title}</h5>\r\n  </div>\r\n</NavLink>\r\n</div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Card\r\n","export default __webpack_public_path__ + \"static/media/ss.8c1602f7.gif\";","export default __webpack_public_path__ + \"static/media/stld.89d77d27.gif\";","import React from 'react';\r\nimport Card from './Card';\r\nimport SS from \"./images/ss.gif\";\r\nimport \"./Sem.css\";\r\nimport STLD from \"./images/stld.gif\";\r\n\r\n\r\n\r\n\r\n\r\nfunction Fifth() {\r\n    return (\r\n        <>\r\n        <div className=\"container cont1\">\r\n    <h2>5th Semester Practicals </h2>\r\n    \r\n\r\n        <div className=\"row\">\r\n            <Card\r\n            imgsrc = {SS}\r\n            link = \"/my_cse/Fifth/SSlist\"\r\n            title = \"System Software\"\r\n            />\r\n\r\n<Card\r\n            imgsrc = {STLD}\r\n            link =\"/my_cse/Fifth/STLDlist\"\r\n            title = \"Switching Theory and Logic Design\"\r\n            />\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n        </div>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default Fifth\r\n","export default __webpack_public_path__ + \"static/media/database.9e9b861e.gif\";","export default __webpack_public_path__ + \"static/media/os.691c7f24.gif\";","export default __webpack_public_path__ + \"static/media/clab.80ab9ec5.gif\";","import React from 'react';\r\nimport DBS from \"./images/database.gif\";\r\nimport OS from \"./images/os.gif\";\r\nimport CLAB from \"./images/clab.gif\";\r\nimport Card from './Card';\r\n\r\nfunction Sixth() {\r\n    return (\r\n\r\n        <div className=\"container cont1\">\r\n            <h2>6th Semester Practicals </h2>\r\n\r\n\r\n            <div className=\"row\">\r\n                <Card\r\n                    imgsrc={DBS}\r\n                    link=\"./6thSem/\"\r\n                    title=\"Database Management System\"\r\n                />\r\n\r\n                <Card\r\n                    imgsrc={OS}\r\n                    link=\"./6thSem/\"\r\n                    title=\"Operating System\"\r\n                />\r\n\r\n\r\n\r\n                <Card\r\n                    imgsrc={CLAB}\r\n                    link=\"./6thSem/\"\r\n                    title=\"C LAB\"\r\n                />\r\n\r\n\r\n\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Sixth\r\n","export default __webpack_public_path__ + \"static/media/dda.5ca2b5ae.gif\";","export default __webpack_public_path__ + \"static/media/dsp.7f12bd32.gif\";","export default __webpack_public_path__ + \"static/media/ooad.4f6e72f7.gif\";","import React from 'react';\r\nimport Card from './Card';\r\nimport DDA from \"./images/dda.gif\";\r\nimport DSP from \"./images/dsp.gif\";\r\nimport OOAD from \"./images/ooad.gif\";\r\n\r\nfunction Seventh() {\r\n    return (\r\n        \r\n        <div className=\"container cont1\">\r\n\r\n<h2>7th Semester Practicals </h2>\r\n    \r\n    <div className=\"row\">\r\n        <Card\r\n        imgsrc = {DSP}\r\n        link =\"./7thSem/\"\r\n        title = \"Digital Signal Processing\"\r\n        />\r\n\r\n<Card\r\n        imgsrc = {DDA}\r\n        link =\"./7thSem/\"\r\n        title = \"Design and Analysis of Algorithm\"\r\n        />\r\n\r\n\r\n\r\n<Card\r\n        imgsrc = {OOAD}\r\n        link =\"./7thSem/\"\r\n        title = \"Object Oriented Analysis & Design\"\r\n        />\r\n\r\n\r\n\r\n\r\n    </div>\r\n    </div>\r\n    \r\n    )\r\n}\r\n\r\nexport default Seventh\r\n","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nfunction FifthMenu(){\r\n  return(\r\n    <>\r\n    <nav className=\"navbar sem-menu navbar-expand-lg navbar-dark bg-light\">\r\n  <div className=\"container-fluid\">\r\n    <NavLink className=\"navbar-brand\" activeClassName=\"active\" exact to=\"/my_cse/Fifth\">5th Semester</NavLink>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n      <ul className=\"navbar-nav\">\r\n\r\n        <li className=\"nav-item\">\r\n          <NavLink className=\"nav-link\"  exact to=\"/Fifth/SSlist\" >System Software</NavLink>\r\n        </li>\r\n\r\n        <li className=\"nav-item\">\r\n          <NavLink className=\"nav-link\" exact  to=\"/Fifth/STLDlist\" >Switching Theory & Logic Desing</NavLink>\r\n        </li>\r\n\r\n        <li className=\"nav-item\">\r\n          <NavLink className=\"nav-link\" exact to=\"/Fifth/FSDPlist\"  >File Structure & Data Processing</NavLink>\r\n        </li>\r\n        \r\n      </ul>\r\n    </div>\r\n  </div>\r\n\r\n</nav>\r\n    </>\r\n  )\r\n}\r\n\r\nfunction Menu() {\r\n    return (\r\n        <div>\r\n            \r\n     <nav className=\"navbar main-menu navbar-expand-lg navbar-dark bg-light\">\r\n  <div className=\"container-fluid\">\r\n    <NavLink className=\"navbar-brand\" activeClassName=\"active\" exact to=\"/my_cse/\">My-Cse</NavLink>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n      <ul className=\"navbar-nav\">\r\n\r\n        <li className=\"nav-item\">\r\n          <NavLink className=\"nav-link\"  exact to=\"/my_cse/Fifth\" >5th Sem</NavLink>\r\n        </li>\r\n\r\n        <li className=\"nav-item\">\r\n          <NavLink className=\"nav-link\" exact  to=\"/my_cse/Sixth\" >6th Sem</NavLink>\r\n        </li>\r\n\r\n        <li className=\"nav-item\">\r\n          <NavLink className=\"nav-link\" exact to=\"/my_cse/Seventh\"  >7th Sem</NavLink>\r\n        </li>\r\n        \r\n      </ul>\r\n    </div>\r\n  </div>\r\n\r\n</nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Menu;\r\n\r\nexport {FifthMenu};","export default __webpack_public_path__ + \"static/media/Home.26a4d693.svg\";","import React from 'react';\r\nimport home from \"./images/Home.svg\";\r\nimport \"./Home.css\";\r\n\r\nfunction Home() {\r\n    return (\r\n    <>\r\n        {/* <div id=\"homemain\" className=\"text-center\">\r\n            \r\n            <div id=\"hometxt\">\r\n            <h1 id=\"h1\">\r\n            Welcome to MY-CSE\r\n            </h1>\r\n            <p id=\"p\">\r\n            Get all your Practicals at one Place.\r\n            </p>\r\n            </div>\r\n\r\n            <div id=\"homeimg\" >\r\n            <img src={home} alt=\"img\"/>\r\n            </div>\r\n\r\n        </div>   */}\r\n\r\n        <div className=\"container-fluid main_header\">\r\n        <div className=\"row\">\r\n            <div className=\"col-md-10 col-12 mx-auto\">\r\n                <div className=\"row\" style={{height:\"92vh\"}}>\r\n                    <div className=\"col-md-6 col-12 main_left\">\r\n                        <h1  >Welcome to <span style={{color:\"var(--orange)\"}}>MY_CSE</span></h1>\r\n                        <h3>\r\n                        Get all your Practicals at one Place.\r\n                        </h3>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-6 col-12 main_right\">\r\n                        \r\n                             \r\n                                <img src={home} class=\"d-block w-100\" alt=\"illustration\"/>\r\n                              \r\n                              \r\n                    \r\n                          </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n        </div>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Eye from '@mui/icons-material/DescriptionOutlined';\r\n\r\n//styling in app.css \r\nfunction List(props) {\r\n    return (\r\n        <div className=\"container index my-4\">\r\n            <h3>{props.prac}</h3>\r\n            <p style={{fontSize:\"1.15rem\"}}>Aim : {props.aim}</p>\r\n            <NavLink exact to={props.link} ><button type=\"button\" class=\"btn btn-default\"><Eye />View</button></NavLink>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List\r\n","import React from 'react'\r\nimport List from \"../../List\";\r\n\r\n\r\nfunction SSlist() {\r\n    return (\r\n        <div className=\"main-list row mt-5 container \" >\r\n            <h2>System Software</h2>\r\n            <hr/>\r\n            \r\n            <List\r\n            prac = \"Practical 1a\"\r\n            aim = \"Write a C program to construct Regular expression for accepting all alphabets\"\r\n            link=\"/my_cse/Fifth/SSlist/Prac1a\"\r\n             />\r\n\r\n<List\r\n            prac = \"Practical 1b\"\r\n            aim = \" Write a C program to construct Regular expression for accepting digits and special symbol\"\r\n            link=\"/my_cse/Fifth/SSlist/Prac1b\"\r\n             />\r\n\r\n<List\r\n            prac = \"Practical 2\"\r\n            aim = \"Write a C program to simulate Lexical Analyzer for vaildating operators\"\r\n            link=\"/my_cse/Fifth/SSlist/Prac2\"\r\n             />\r\n\r\n<List\r\n            prac = \"Practical 3\"\r\n            aim = \"Design and develop a C program to compute FIRST and FOLLOWS\"\r\n            link=\"/my_cse/Fifth/SSlist/Prac3\"\r\n             />\r\n\r\n<List\r\n            prac = \"Practical 4\"\r\n            aim = \"Design and develop a C program to simulate Deterministic Finite Automatio (DFA) for the string which ending with 'abb' \"\r\n            link=\"/my_cse/Fifth/SSlist/Prac4\"\r\n             />\r\n\r\n\r\n        \r\n        <List\r\n            prac = \"Practical 6\"\r\n            aim = \"Design and develop a C program to findout SLR parser\"\r\n            link=\"/my_cse/Fifth/SSlist/Prac6\"\r\n             />\r\n\r\n<List\r\n            prac = \"Practical 7\"\r\n            aim = \" Design and develop a C program to insert(), delete(), sort(), search(), display() using Data Structure.\"\r\n            link=\"/my_cse/Fifth/SSlist/Prac7\"\r\n             />\r\n\r\n<List\r\n            prac = \"Practical 8\"\r\n            aim = \"Implement a C program for 3 address code\"\r\n            link=\"/my_cse/Fifth/SSlist/Prac8\"\r\n             />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SSlist\r\n","import React from 'react';\r\n// eslint-disable-next-line \r\nimport Prism from \"prismjs\";\r\nimport \"./prism.css\";\r\n\r\nfunction ProgramTemp(props) {\r\n    return (\r\n        <div className=\"mb-5\">\r\n<h2 className=\"container mt-5 mb-2 mx-auto\">{props.pracName} </h2>\r\n        <hr/>\r\n        <div className=\"contanier-fluid mb-4\">\r\n            <pre className=\"language-c++\" >\r\n            <code>{props.code}</code>\r\n            </pre>\r\n        </div>\r\n        <h2 className=\"container mt-5 mb-2 mx-auto\">Output </h2>\r\n        <hr className=\"mb-3\" />\r\n        <img className=\"img-fluid\" src={props.pracimg} alt=\"pracimage\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProgramTemp\r\n","export default __webpack_public_path__ + \"static/media/SS Practical 1 a.3559a6d6.jpeg\";","export default __webpack_public_path__ + \"static/media/SS Practical 1 b.413ed10c.jpeg\";","export default __webpack_public_path__ + \"static/media/SS Practical 2.fd235548.jpeg\";","export default __webpack_public_path__ + \"static/media/SS Practical 3.a1eb079d.jpeg\";","export default __webpack_public_path__ + \"static/media/SS Practical 4.6068261f.jpeg\";","export default __webpack_public_path__ + \"static/media/SS Practical 6.d6f08d3c.jpeg\";","export default __webpack_public_path__ + \"static/media/SS Practical 7.ac42efbf.jpeg\";","export default __webpack_public_path__ + \"static/media/SS Practical 8.123b8cea.jpeg\";","import React from 'react';\r\nimport ProgramTemp from '../../ProgramTemp';\r\nimport img1 from \"../images5th/SS Practical 1 a.jpeg\";\r\nimport img1b from \"../images5th/SS Practical 1 b.jpeg\";\r\nimport img2 from \"../images5th/SS Practical 2.jpeg\";\r\nimport img3 from \"../images5th/SS Practical 3.jpeg\";\r\nimport img4 from \"../images5th/SS Practical 4.jpeg\";\r\nimport img6 from \"../images5th/SS Practical 6.jpeg\";\r\nimport img7 from \"../images5th/SS Practical 7.jpeg\";\r\nimport img8 from \"../images5th/SS Practical 8.jpeg\";\r\n\r\n\r\nfunction prac1a() {\r\n    return (\r\n        <div>\r\n       <ProgramTemp\r\n        pracName = \"Practical 1a\"\r\n        code = {`#include < stdio.h>\r\n#include < string.h>\r\nint main()\r\n        {\r\nchar a[30printf(\"enter the  String: \");\r\n];\r\n    int i , l , flag = 0;\r\n            scanf(\"%s\",a);\r\n    l = strlen(a);\r\nfor(i=0;i<l;i++)\r\n    {\r\nif((a[i]>=65&&a[i]<=90)||(a[i]>=97&&a[i]<=122))\r\n{\r\nflag++;\r\n}\r\n}\r\n        if(flag==l)\r\n{\r\nprintf(\"String is accepted\");\r\n}\r\nelse\r\n{\r\n    printf(\"String is rejected\");\r\n}\r\n}`}\r\n\r\npracimg={img1}\r\n       />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction Prac1b(){\r\n    return(\r\n        <>\r\n  <div>\r\n       <ProgramTemp\r\n        pracName = \"Practical 1b\"\r\n        code = {`#include < stdio.h>\r\n#include < string.h>\r\nint main()\r\n{\r\nchar a[10];\r\n    int i ,flag = 0;\r\nprintf(\"enter the String: \");\r\nscanf(\"%s\",a);\r\nfor(i=0;i<strlen(a);i++)\r\n{\r\n        if(!(a[i]>=65&&a[i]<=90)||(a[i]>=97&&a[i]<=122))\r\n    {\r\n            flag++;\r\n            }\r\n            }\r\n            if(flag==strlen(a))\r\n        {\r\n            printf(\"String is accepted\");\r\n            }\r\n            else\r\n                {\r\n                printf(\"String is rejected\");\r\n}\r\n}`}\r\n\r\npracimg={img1b}\r\n       />\r\n        </div>\r\n        </>\r\n    )\r\n};\r\n\r\n\r\nfunction Prac2(){\r\n    return(\r\n        <div>\r\n        <ProgramTemp\r\n         pracName = \"Practical 2\"\r\n    code = {`#include < stdio.h>\r\n#include < string.h>\r\nint main()\r\n{\r\nchar a[100],id[100];\r\nint i,c=1,n;\r\n\r\nprintf(\"enter the  string: \");\r\nscanf(\"%s\",a);\r\nn = strlen(a);\r\n    printf(\"\\nLexixal Analyzer :=\\n\\n\");\r\n    \r\nfor(i=0;i< n;i++)\r\n{\r\n    if((a[i]>=65&&a[i]<=90)||(a[i]>=97&&a[i]<=122))\t\t\t//Check for Identifier A-Z and a-z\r\n{\r\nwhile((a[i]>=65&&a[i]<=90)||(a[i]>=97&&a[i]<=122))\r\n{\r\nstrcpy(id,a);\r\nprintf(\"%c\",id[i]);\r\ni++;\r\n}\r\nprintf(\" is a identifier - id%d\\n\",c);\r\nc++;\r\n}\r\nif(a[i]>=48&&a[i]<=57)\t\t\t\t\t\t\t\t\t\t//check for Digit 0-9\r\n{\r\n    while(a[i]>=48&&a[i]<=57)\r\n{\r\n    strcpy(id,a);\r\nprintf(\"%c\",id[i]);\r\n    i++;\r\n    }\r\n    printf(\" is a constant\\n\");\r\n}\t\r\nif(a[i]==42 || a[i]==43 || a[i]==45 || a[i]==47 || a[i]==61) //check for Operator +,-,/,=,*\t\r\n{\r\nstrcpy(id,a);\r\n    printf(\"%c\",id[i]);\r\n    printf(\" is a oprator\\n\");\r\n}\r\nif(a[i]==40 || a[i]==41)\t\t\t\t\t\t\t\t\t//check for Parenthesis '(' ')'\t\r\n{\r\nstrcpy(id,a);\r\n    printf(\"%c\",id[i]);\r\n    printf(\" is a Parenthesis\\n\");\r\n}\r\n}\r\n}`}\r\n \r\n pracimg={img2}\r\n        />\r\n         </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Prac3(){\r\n    return(\r\n        <>\r\n  <div>\r\n       <ProgramTemp\r\n        pracName = \"Practical 3\"\r\ncode = {`#include< stdio.h>\r\n#include< string.h>\r\nvoid main()\r\n{\r\nchar S[20],L[20],R[20];\r\nint lenS,lenL,i;\r\n\r\nprintf(\"Enter the production of S-> \");\r\nscanf(\"%s\",S);\r\nprintf(\"Enter the production of L-> \");\r\nscanf(\"%s\",L);\r\n\r\nlenS=strlen(S);\r\nlenL=strlen(L);\r\n\r\nfor(i=0; i< lenS ;i++)\r\n{\r\n    if(S[0]>=97 && S[0]<=123){\t\t\t\r\n        R[0]=S[0];\r\n    }\r\n    if(S[0]==65){\t\t\t\t\t\t//FIRST of S Second Rule\r\n        if(L[0]>=97 && L[0]<=123){\t\t\r\n            R[0]=L[0];\r\n        }\r\n    }\r\n    if(S[i]==76){\t\t\t\t\t\t//FOLLOW of L\r\n        R[1]=S[i+1];\r\n    }\r\n    if(S[i]==83)\r\n    {\r\n        R[2]=S[i+1];\t\t\t\t\t//FOLLOW of S\r\n    }\r\n}\r\nprintf(\"\\nFRIST of S\\t:: %c\",R[0]);\r\n\r\nfor(i=0;i< lenL;i++)\r\n{\r\n    if(L[0]>=97 && L[0]<=123){\t\t\t//FIRST of L First Rule\r\n        R[0]=L[0];\r\n    }\r\n    if(L[0]==65){\t\t\t\t\t\t//FIRST of L Second Rule\r\n        if(S[0]>=97 && S[0]<=123){\t\t\r\n            R[0]=S[0];\r\n        }\r\n    }\r\n    if(L[i]==76){\t\t\t\t\t\t//FOLLOW of L\r\n        R[1]=L[i+1];\r\n    }\r\n    if(L[i]==83){\t\t\t\t\t\t//FOLLOW of S\r\n        R[2]=L[i+1];\r\n    }\r\n}\r\nprintf(\"\\nFRIST of L\\t:: %c\",R[0]);\r\n\r\nif(R[2]=='\\0')\r\n    printf(\"\\nFOLLOW of S\\t:: $\");\r\nelse\r\n    printf(\"\\nFOLLOW of S\\t:: %c\",R[2]);\r\n    \r\nif(R[1]=='\\0')\r\n    printf(\"\\nFOLLOW of L\\t:: $\");\r\nelse\r\n    printf(\"\\nFOLLOW of L\\t:: %c\",R[1]);\r\n}`}\r\n\r\npracimg={img3}\r\n       />\r\n        </div>\r\n        </>\r\n    )\r\n};\r\n\r\n\r\n\r\nfunction Prac4(){\r\n    return(\r\n        <>\r\n  <div>\r\n       <ProgramTemp\r\n        pracName = \"Practical 4\"\r\n    code = {` #include < stdio.h>\r\n    #include< string.h>\r\nvoid main()\r\n    {\r\nint i,cs=0,len=0;\r\nchar str[10];\r\n    printf(\"Input a string :: \");\r\n    scanf(\"%s\",str);\r\n    len=strlen(str);\r\n    printf(\"\\n\");\r\n    for(i=0;i<len;i++)\r\n{\r\n    if(cs==0){\r\n    if(str[i]=='a'){\r\n    cs=1;\r\n    printf(\"q%d->\",cs);\r\n    }\r\nelse{\r\nif(str[i]=='b'){\r\ncs=0;\r\n    printf(\"q%d->\",cs);\r\n    }\r\n    }\r\n}\r\nelse if(cs==1){\r\nif(str[i]=='a'){\r\n    cs=1;\r\nprintf(\"q%d->\",cs);\r\n    }\r\nelse{\r\nif(str[i]=='b'){\r\ncs=2;\r\n    printf(\"q%d->\",cs);\r\n    }\r\n}\r\n}\r\n    else if(cs==2){\r\n    if(str[i]=='a'){\r\n    cs=3;\r\nprintf(\"q%d->\",cs);\r\n}\r\n    else{\r\n    if(str[i]=='b'){\r\n    cs=0;\r\n    printf(\"q%d->\",cs);\r\n}\r\n}\r\n}\r\n            else if(cs==3){\r\nif(str[i]=='a'){\r\ncs=1;\r\n    printf(\"q%d->\",cs);\r\n}\r\n    else{\r\nif(str[i]=='b'){\r\ncs=2;\r\n            printf(\"q%d->\",cs);\r\n}\r\n}\r\n    }\r\n    }\r\n    if(cs==3){\r\n    printf(\"\\n\\nString is Accepted\");\r\n}\r\n    else{\r\n    printf(\"\\n\\nString is Rejected\");\r\n}\r\n}`}\r\n\r\npracimg={img4}\r\n       />\r\n        </div>\r\n        </>\r\n    )\r\n};\r\n\r\n\r\n\r\n\r\nfunction Prac6(){\r\n    return(\r\n        <>\r\n  <div>\r\n       <ProgramTemp\r\n        pracName = \"Practica 6\"\r\n        code = {`#include< stdio.h>\r\n#include< string.h>\r\nint strp=0,stkp=0;\r\nchar str[20],stack[20];\r\nvoid reduce()\r\n{\r\nint i,stack_len;\r\nchar str1[]=\"E+E\",str2[]=\"E*E\";\r\nstack_len=strlen(stack);\r\nfor(i=0;i< stack_len;i++)\r\n{\r\n    if(stack[i]=='a'){\r\n        stack[i]='E';\r\n    }\r\n    if(stack[i]=='b'){\r\n        stack[i]='E';\r\n    }\r\n\r\n}\r\n    if(strcmp(stack,str1)==0){\r\n        strcpy(stack,\"E\");\r\n        stkp-=2;\r\n    }\r\n    if(strcmp(stack,str2)==0){\r\n        strcpy(stack,\"E\");\r\n        stkp-=2;\r\n    }\r\n}\r\nvoid main()\r\n{\r\nint len,i;\r\nprintf(\"Given Grammar is :\\n\\tE->E+E\\n\\tE->E*E\\n\\tE->a\\n\\tE->b\");\r\nprintf(\"\\nEnter the string :: \");\r\nscanf(\"%s\",str);\r\nlen=strlen(str);\r\nstack[0]=str[0];\r\nstrp++;\r\nstkp++;\r\nfor(i=0;i< len;i++)\r\n{\r\n    reduce();\r\n    stack[stkp]=str[strp];\r\n    strp++;\r\n    stkp++;\t\r\n}\r\nreduce();\r\nif((stack[0]=='E') && (stack[1]=='\\0')){\r\n    printf(\"\\nString is Accepted\");\r\n    printf(\"\\nString %c\",stack[0]);\r\n}\r\nelse{\r\n    printf(\"\\nString is Rejected\");\r\n}\r\n}`}\r\n\r\npracimg={img6}\r\n       />\r\n        </div>\r\n        </>\r\n    )\r\n};\r\n\r\n\r\n\r\n\r\nfunction Prac7(){\r\n    return(\r\n        <>\r\n  <div>\r\n       <ProgramTemp\r\n        pracName = \"Practical 7\"\r\n        code = {`#include < stdio.h>\r\n\r\nint insert_no(int a[],int n)\r\n{\r\nint i,item,loc;\r\nprintf(\"Input the array element to insert :: \");\r\nscanf(\"%d\",&item);\r\nprintf(\"Input the location :: \");\r\nscanf(\"%d\",&loc);\r\n\r\nif(loc< =n)\r\n{\r\n    for(i=n-1;i>=loc-1;i--){\r\n    a[i+1] = a[i];\r\n    }\r\n    a[loc-1] = item;\r\n    printf(\"\\nItem %d is inseted to %d location\\n\",item,loc);\r\n    n++;\r\n}\r\nelse{\r\n    printf(\"\\nPlease Input less than %d location\",n);\r\n}\r\n\r\nprintf(\"\\n\");\r\nreturn n;\r\n}\r\n\r\nint delete_no(int a[],int n)\r\n{\r\nint item=0,i,loc;\r\nprintf(\"Input the location from where to be delete :: \");\r\nscanf(\"%d\",&loc);\r\nif(loc< =n+1)\r\n{\r\n    item=a[loc-1];\r\n    printf(\"\\nItem %d is deleted form %d location\\n\",item,loc);\r\n    for(i=loc-1;i<=n-1;i++)\r\n        a[i]=a[i+1];\r\n    n--;\r\n}\r\nelse{\r\n    printf(\"\\nPlease Input less than %d location\",n);\r\n}\r\n\r\nprintf(\"\\n\");\r\nreturn n;\r\n}\r\n\r\nvoid sort_list(int a[],int n)\r\n{\r\nint i,j,temp=0;\r\n\r\nfor(i=0;i< n;i++) {\r\n    for(j=i;j< n-1;j++) {\r\n        if(a[j]>a[j+1]) {\r\n            temp=a[j];\r\n            a[j]=a[j+1];\r\n            a[j+1]=temp;\r\n        }\r\n    }\r\n}\r\nprintf(\"Sorted List is :: \");\r\nfor(i=0;i<n;i++){\r\n    printf(\"%d \",a[i]);\r\n}\r\nprintf(\"\\n\");\r\n}\r\nvoid search_no(int a[],int n)\r\n{\r\nint item,i,flag=0;\r\nprintf(\"Input a serch element :: \");\r\nscanf(\"%d\",&item);\r\n\r\n    for(i=0;i< n;i++){\r\n        if(a[i]==item){\r\n            flag=i;\r\n            break;\r\n        }\r\n    }\r\n    if(flag>0){\r\n        printf(\"\\nItem %d is found at location %d \",item,flag+1);\r\n    }\r\n    else{\r\n        printf(\"\\nItem %d is not in list\",item);\r\n    }\r\n\r\nprintf(\"\\n\");\r\n}\r\nvoid display_list(int a[],int n)\r\n{\r\nint i;\r\nprintf(\"\\nElement in list :: \");\r\nfor(i=0;i< n;i++){\r\n    printf(\"%d \",a[i]);\r\n}\r\n}\r\nvoid main()\r\n{\r\nint i, n,arr[100],ch,del_loc=0;\r\nprintf(\"Input the array size :: \");\r\nscanf(\"%d\",&n);\r\nprintf(\"Input the array element :: \");\r\nfor(i=0;i< n;i++)\r\n    scanf(\"%d\",&arr[i]);\r\n\r\ndo{\r\n    printf(\"\\n0. Exit\");\r\n    printf(\"\\n1. INSERT\");\r\n    printf(\"\\n2. DELETE\");\r\n    printf(\"\\n3. SEARCH\");\r\n    printf(\"\\n4. SORT\");\r\n    printf(\"\\n5. SHOW\\n\");\r\n    \r\n    printf(\"\\nEnter your choise :: \");\r\n    scanf(\"%d\",&ch);\r\n    printf(\"\\n\");\r\n    switch(ch)\r\n    {\r\n        case 1:n=insert_no(arr,n); display_list(arr,n); break;\r\n        case 2:n=delete_no(arr,n); display_list(arr,n); break;\r\n        case 3:search_no(arr,n); break;\r\n        case 4:sort_list(arr,n); break;\r\n        case 5:display_list(arr,n); break;\r\n    }\r\n}while(ch);\r\n}`}\r\n\r\npracimg={img7}\r\n       />\r\n        </div>\r\n        </>\r\n    )\r\n};\r\n\r\n\r\n\r\n\r\nfunction Prac8(){\r\n    return(\r\n        <>\r\n  <div>\r\n       <ProgramTemp\r\n        pracName = \"Practical 8\"\r\ncode = {`#include< stdio.h>\r\n#include< string.h>\r\nvoid pm();\r\nvoid plus();\r\nint i,len;\r\nchar expe[10],exp1[10],expe2[10];\r\nvoid main()\r\n{\r\n    printf(\"Enter the Expression:: \");\r\n    scanf(\"%s\",expe);\r\n    strcpy(exp1,expe);\r\n    len=strlen(exp1);\r\n    expe2[0]='\\0';\r\n    for(i=0;i< len;i++)\r\n    {\r\n        if((exp1[i]=='+') || exp1[i]=='-'){\r\n            if(exp1[i+2]=='*'){\r\n                pm();\r\n                break;\r\n            }\r\n            else{\r\n                plus();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\nvoid pm()\r\n{\r\n    strrev(exp1);\r\n    int j=len-i-1;\r\n    strncat(expe2,exp1,j);\r\n    strrev(expe2);\r\n    printf(\"\\n\\tThree Address Code :: \\n\\ttemp=%s \\n\\ttemp1=%c%ctemp\\n\",expe2,exp1[j+1],exp1[j]);\r\n}\r\nvoid plus()\r\n{\r\n    strncat(expe2,exp1,i+2);\r\n    printf(\"\\n\\tThree Address Code :: \\n\\t\\ttemp=%s \\n\\t\\ttemp1=temp%c%c\\n\",expe2,exp1[i+2],exp1[i+3]);\r\n}`}\r\n\r\npracimg={img8}\r\n       />\r\n        </div>\r\n        </>\r\n    )\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default prac1a;\r\n\r\nexport {Prac1b, Prac2, Prac3, Prac4,Prac6,Prac7,Prac8};\r\n","import React from 'react'\r\nimport List from \"../../List\";\r\n\r\n\r\nfunction STLDlist() {\r\n    return (\r\n        <div className=\"main-list row mt-5 container \" >\r\n            <h2>Switching Theory & Logic Design</h2>\r\n            <hr/>\r\n            \r\n            <List\r\n            prac = \"Practical 1\"\r\n            aim = \" Introduction to VHDL and simulation tool\"\r\n            link=\"/my_cse/Fifth/STLDlist/StldPrac1\"\r\n             />\r\n\r\n<List\r\n            prac = \"Practical 2\"\r\n            aim = \" Design a VHDL Program for Basic and Universal Gates using Dataflow style\"\r\n            link=\"/my_cse/Fifth/STLDlist/StldPrac2\"\r\n             />\r\n\r\n<List\r\n            prac = \"Practical 3\"\r\n            aim = \" Write VHDL Program for a full Adder using Dataflow style\"\r\n            link=\"/my_cse/Fifth/STLDlist/StldPrac3\"\r\n             />\r\n\r\n<List\r\n            prac = \"Practical 4\"\r\n            aim = \"Develop a hardware program 8:1 Multiplexer using Behavoiral style\"\r\n            link=\"/my_cse/Fifth/STLDlist/StldPrac4\"\r\n             />\r\n\r\n<List\r\n            prac = \"Practical 5\"\r\n            aim = \" Write a VHDL program for 2:4 Decoders using Behavioral Style\"\r\n            link=\"/my_cse/Fifth/STLDlist/StldPrac5\"\r\n             />\r\n\r\n\r\n        \r\n        <List\r\n            prac = \"Practical 6\"\r\n            aim = \"Generate VHDL Program for Even Parity Generator using data flow style\"\r\n            link=\"/my_cse/Fifth/STLDlist/StldPrac6\"\r\n             />\r\n\r\n<List\r\n            prac = \"Practical 7\"\r\n            aim = \" Write a VHDL program for 1 bit Comparator using Dataflow Style\"\r\n            link=\"/my_cse/Fifth/STLDlist/StldPrac7\"\r\n             />\r\n\r\n<List\r\n            prac = \"Practical 8\"\r\n            aim = \" Write a program for binary to gray code converter using data flow style\"\r\n            link=\"/my_cse/Fifth/STLDlist/StldPrac8\"\r\n             />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default STLDlist\r\n","export default __webpack_public_path__ + \"static/media/STLD Practical 1.175e0509.jpg\";","export default __webpack_public_path__ + \"static/media/STLD Practical 2.0372e36f.jpg\";","export default __webpack_public_path__ + \"static/media/STLD Practical 3.bdaf1abc.jpg\";","export default __webpack_public_path__ + \"static/media/STLD Practical 4.eaa3a0d3.jpeg\";","export default __webpack_public_path__ + \"static/media/STLD Practical 5.560e3412.jpg\";","export default __webpack_public_path__ + \"static/media/STLD Practical 6.e79b8d7c.jpg\";","export default __webpack_public_path__ + \"static/media/STLD Practical 7.efd7a28e.jpg\";","export default __webpack_public_path__ + \"static/media/STLD Practical 8.79ca5e8a.jpg\";","import React from 'react'\r\nimport ProgramTemp from '../../ProgramTemp';\r\nimport img1 from \"../images5th/STLD Practical 1.jpg\";\r\nimport img2 from \"../images5th/STLD Practical 2.jpg\";\r\nimport img3 from \"../images5th/STLD Practical 3.jpg\";\r\nimport img4 from \"../images5th/STLD Practical 4.jpeg\";\r\nimport img5 from \"../images5th/STLD Practical 5.jpg\";\r\nimport img6 from \"../images5th/STLD Practical 6.jpg\";\r\nimport img7 from \"../images5th/STLD Practical 7.jpg\";\r\nimport img8 from \"../images5th/STLD Practical 8.jpg\";\r\n\r\n\r\n\r\nfunction StldPrac1() {\r\n    return (\r\n        <div>\r\n            <ProgramTemp\r\n        pracName = \"Practical 1\"\r\n        code = {` 1. TestBench CODE :-\r\n    \r\n------ Code your testbench here -------\r\nlibrary IEEE;\r\nuse IEEE.std_logic_1164.all;\r\nentity HA_tb is\r\nend entity;\r\narchitecture tb of HA_tb is\r\ncomponent HA is\r\nport(a,b: in std_logic; s,c:out std_logic);\r\nend component;\r\nsignal a,b,s,c: std_logic;\r\nbegin\r\nuut: HA port map(a => a, b=> b, s=>s, c=>c);\r\nstim:process\r\nbegin\r\na < = '0';\r\nb < = '0';\r\nwait for 20 ns;\r\na <= '0';\r\nb <= '1';\r\nwait for 20 ns;\r\na <= '1';\r\nb <= '0';\r\nwait for 20 ns;\r\na <= '1';\r\nb <= '1';\r\nwait for 20 ns;\r\nwait;\r\nend process;\r\nend tb;\r\n    \r\n        \r\n2. Desgin CODE :-\r\n------ Code your design here -------\r\nlibrary IEEE;\r\nuse IEEE.std_logic_1164.all;\r\nentity HA is\r\nport(a,b: in std_logic; s,c:out std_logic);\r\nend HA;\r\narchitecture df of HA is\r\nbegin\r\ns <= a XOR b;\r\nc <= a AND b;\r\nend df;`}\r\n\r\npracimg={img1}\r\n/>    \r\n</div>\r\n    )\r\n}\r\n\r\n\r\nfunction StldPrac2() {\r\n    return (\r\n        <div>\r\n            <ProgramTemp\r\n        pracName = \"Practical 2\"\r\n        code = {`1. Testbench CODE :-\r\n-- Code your testbench here\r\nlibrary IEEE;\r\nuse IEEE.std_logic_1164.all;\r\nentity un_tb is\r\nend un_tb;\r\narchitecture tb of un_tb is\r\ncomponent un_gate is\r\nport(\r\na: in bit;\r\nb: in bit;\r\nor_out: out bit;\r\nand_out: out bit;\r\nnand_out: out bit;\r\nnor_out: out bit\r\n);\r\nend component;\r\nsignal a,b,or_out,and_out,nand_out,nor_out: bit;\r\nbegin\r\n-- Connect DUT\r\nDUT: un_gate port map(\t\r\na=>a,b=>b,\r\nor_out => or_out,\r\nand_out => and_out,\r\nnand_out => nand_out,\r\nnor_out => nor_out);\r\nprocess\r\nbegin\r\na <= '0';\r\nb <= '0';\r\nwait for 1ns;\r\na <= '0';\r\nb <= '1';\r\nwait for 1ns;\r\na <= '1';\r\nb <= '0';\r\nwait for 1ns;\r\na <= '1';\r\nb <= '1';\r\nwait for 1ns;\r\nwait;\r\nend process;\r\nend tb;\r\n\r\n2. Desgin CODE :-\r\n-- Code your design here\r\nlibrary IEEE;\r\nuse IEEE.std_logic_1164.all;\r\nentity UN_gate is\r\nport(\r\na: in bit;\r\nb: in bit;\r\nor_out: out bit;\r\nand_out: out bit;\r\nnand_out: out bit;\r\nnor_out: out bit\r\n);\r\nend UN_gate;\r\narchitecture arc_UN of UN_gate is\r\nbegin \r\nor_out   <= a or b;\r\nand_out  <= a AND b;\r\nnand_out <= a nand b ;\r\nnor_out  <= a nor b;\r\nend arc_UN;`}\r\n\r\npracimg={img2}\r\n/>    \r\n</div>\r\n    )\r\n}\r\n\r\nfunction StldPrac3() {\r\n    return (\r\n        <div>\r\n            <ProgramTemp\r\n        pracName = \"Practical 3\"\r\ncode = {`    1. Testbench CODE :-\r\n\r\n-- Code your testbench here\r\nlibrary IEEE;\r\nuse IEEE.std_logic_1164.all;\r\n\r\nentity FA_tb is\r\nend entity;\r\n\r\narchitecture tb of FA_tb is\r\n\r\ncomponent FA is\r\nport(\r\n        a,b,c: in bit; \r\n        sum,carry:out bit\r\n        );\r\n    end component;\r\n\r\n    signal a,b,c,sum,carry: bit;\r\n\r\nbegin\r\nuut: FA port map(a => a, b=> b, c=>c, sum=>sum, carry=>carry);\r\nstim:process\r\nbegin\r\na <= '0';\r\nb <= '0';\r\nc <= '0';\r\nwait for 10ns;\r\na <= '0';\r\nb <= '0';\r\nb <= '1';\r\nwait for 10ns;\r\na <= '0';\r\nb <= '1';\r\nc <= '0';\r\nwait for 10ns;\r\na <= '0';\r\nb <= '1';\r\nc <= '1';\r\nwait for 10ns;\r\na <= '1';\r\nb <= '0';\r\nc <= '0';\r\nwait for 10ns;\r\na <= '1';\r\nb <= '0';\r\nc <= '1';\r\nwait for 10ns;\r\na <= '1';\r\nb <= '1';\r\nc <= '0';\r\nwait for 10ns;\r\na <= '1';\r\nb <= '1';\r\nc <= '1';\r\nwait for 10ns;\r\nwait;\r\nend process;\r\nend tb;\r\n\r\n2. Design CODE :-\r\n\r\n-- Code your design here\r\nlibrary IEEE;\r\nuse IEEE.std_logic_1164.all;\r\n\r\nentity FA is\r\nport(\r\n        a,b,c: in bit;\r\n        sum,carry:out bit\r\n        );\r\n    end FA;\r\n    \r\narchitecture arc_fa of FA is\r\nbegin\r\nsum   <= c xor a xor b;\r\ncarry <= (a and b) or (c and (a xor b));\r\nend arc_fa;`}\r\n\r\npracimg={img3}\r\n/>    \r\n</div>\r\n    )\r\n}\r\n\r\n\r\n\r\nfunction StldPrac4() {\r\n    return (\r\n        <div>\r\n            <ProgramTemp\r\n        pracName = \"Practical 4\"\r\ncode = {`    1.TestBench code:- \r\n-- Code your testbench here\r\nlibrary ieee;\r\nuse ieee.std_logic_1164.all;\r\nentity mux_tb is\r\nend entity;\r\narchitecture tb of mux_tb is\r\ncomponent MUX_SOURCE is \r\nPort ( S : in STD_LOGIC_VECTOR (2 downto 0);\r\nI : in STD_LOGIC_VECTOR (7 downto 0);\r\nY : out STD_LOGIC);\r\nend component;\r\nsignal S : STD_LOGIC_VECTOR(2 downto 0);\r\nsignal I : STD_LOGIC_VECTOR(7 downto 0);\r\nsignal Y : STD_LOGIC;\r\nbegin \r\nuut : MUX_SOURCE port map(\r\nS => S,\r\nI => I,\r\nY => Y);\r\nstim : process\r\nbegin\r\nI(0) <= '0';\r\nI(1) <= '1';\r\nI(2) <= '0';\r\nI(3) <= '1';\r\nI(4) <= '0';\r\nI(5) <= '1';\r\nI(6) <= '0';\r\nI(7) <= '1';\r\nS <= \"000\";wait for 10 ns;\r\nS <= \"001\";wait for 10 ns;\r\nS <= \"010\";wait for 10 ns;\r\nS <= \"011\";wait for 10 ns;\r\nS <= \"100\";wait for 10 ns;\r\nS <= \"101\";wait for 10 ns;\r\nS <= \"110\";wait for 10 ns;\r\nS <= \"111\";wait for 10 ns;\r\nwait;\r\nend process;\r\nend tb;\r\n\r\n2.Code your design here \r\n-- Code your design here\r\nlibrary IEEE;\r\nuse IEEE.std_logic_1164.all;\r\nentity MUX_SOURCE is\r\nPort ( S : in  STD_LOGIC_VECTOR (2 downto 0);\r\nI : in  STD_LOGIC_VECTOR (7 downto 0);\r\nY : out STD_LOGIC);\r\nend MUX_SOURCE;\r\narchitecture Behavioral_NDR of MUX_SOURCE is\r\nbegin\r\nprocess (S,I)\r\nbegin\r\nif (S <= \"000\") then\r\nY <= I(0);\r\nelsif (S <= \"001\") then\r\nY <= I(1);\r\nelsif (S <= \"010\") then\r\nY <= I(2);\r\nelsif (S <=\"011\") then\r\nY <= I(3);\r\nelsif (S <=\"100\") then\r\nY <= I(4);\r\nelsif (S <=\"101\") then\r\nY <= I(5);\r\nelsif (S <=\"110\") then\r\nY <= I(6);\r\nelse\r\nY <= I(7);\r\nend if;\r\nend process;\r\nend Behavioral_NDR;`}\r\n\r\npracimg={img4}\r\n/>    \r\n</div>\r\n    )\r\n}\r\n\r\n\r\nfunction StldPrac5() {\r\n    return (\r\n        <div>\r\n            <ProgramTemp\r\n        pracName = \"Practical 5\"\r\n        code = {`\r\n1. Testbench CODE :-\r\n-- Code your testbench here\r\nlibrary IEEE;\r\nuse IEEE.std_logic_1164.all;\r\nentity decoder_tb is\r\nend entity;\r\narchitecture tb of decoder_tb is\r\ncomponent DECODER_SOURCE is\r\nport(\r\nI : in STD_LOGIC_VECTOR(1 downto 0);\r\nY : out STD_LOGIC_VECTOR(3 downto 0)\r\n);\r\nend component;\r\nsignal I : STD_LOGIC_VECTOR(1 downto 0);\r\nsignal Y : STD_LOGIC_VECTOR(3 downto 0);\r\nbegin\r\nuut: DECODER_SOURCE port map(\r\nI=> I,\r\nY=> Y\r\n);\r\nstim:process\r\nbegin\r\nI <=\"00\";\r\nwait for 20 ns;\r\nI<= \"01\";\r\nwait for 20 ns;\r\nI<= \"10\";\r\nwait for 20 ns;\r\nI<= \"11\";\r\nwait for 20 ns;\r\nwait;\r\nend process;\r\nend tb;\r\n2. Design CODE :-\r\n-- Code your design here\r\nlibrary IEEE;\r\nuse IEEE.std_logic_1164.all;\r\nentity DECODER_SOURCE is\r\nport(\r\nI : in STD_LOGIC_VECTOR (1 downto 0);\r\nY : out STD_LOGIC_VECTOR (3 downto 0)\r\n);\r\nend DECODER_SOURCE;\r\narchitecture arc_decoder of DECODER_SOURCE is\r\nbegin\r\nprocess (I)\r\nbegin\r\ncase I is\r\nwhen \"00\" => Y <= \"0001\"; \r\nwhen \"01\" => Y <= \"0010\";\r\nwhen \"10\" => Y <= \"0100\"; \r\nwhen others => Y <= \"1000\";\r\nend case;\r\nend process;\r\nend arc_decoder;`}\r\n\r\npracimg={img5}\r\n/>    \r\n</div>\r\n    )\r\n}\r\n\r\nfunction StldPrac6() {\r\n    return (\r\n        <div>\r\n            <ProgramTemp\r\n        pracName = \"Practical 6\"\r\n        code = {`1. Testbench CODE :-\r\n-- Code your testbench here\r\nlibrary IEEE;\r\nuse IEEE.std_logic_1164.all;\r\nentity PGC_NDR is\r\nend PGC_NDR;\r\narchitecture tb of PGC_NDR is\r\ncomponent Parity_Genrator_Checker is\r\nport(\r\na,b,c: in bit;\r\nopg,epg,epc,opc : out bit\r\n);\r\nend component;\r\nsignal a: bit :='0';\r\nsignal b: bit :='0';\r\nsignal c: bit :='0';\r\nsignal epg: bit;\r\nsignal opg: bit;\r\nsignal epc: bit;\r\nsignal opc: bit;\r\nbegin\r\nuut: Parity_Genrator_Checker port map (\r\na => a, b => b, c => c,\r\nepg => epg, opg => opg, epc => epc, opc => opc \r\n);\r\nstim:process\r\nbegin\r\na <= '0';\r\nb <= '0';\r\nc <= '0';\r\nwait for 10ns;\r\na <= '0';\r\nb <= '0';\r\nb <= '1';\r\nwait for 10ns;\r\na <= '0';\r\nb <= '1';\r\nc <= '0';\r\nwait for 10ns;\r\na <= '0';\r\nb <= '1';\r\nc <= '1';\r\nwait for 10ns;\r\na <= '1';\r\nb <= '0';\r\nc <= '0';\r\nwait for 10ns;\r\na <= '1';\r\nb <= '0';\r\nc <= '1';\r\nwait for 10ns;\r\na <= '1';\r\nb <= '1';\r\nc <= '0';\r\nwait for 10ns;\r\na <= '1';\r\nb <= '1';\r\nc <= '1';\r\nwait for 10ns;\r\nwait;\r\nend process;\r\nend tb;\r\n\r\n2. Design CODE :-\r\n-- Code your design here\r\nlibrary IEEE;\r\nuse IEEE.std_logic_1164.all;\r\nentity Parity_Genrator_Checker is\r\nport (\r\n    a,b,c : in bit;\r\n    epg,opg,epc,opc : out bit\r\n    );\r\nend Parity_Genrator_Checker;\r\narchitecture arc_pgc of Parity_Genrator_Checker is\r\nbegin\r\nepg <= a XOR b XOR c;\r\nopg <= (a XOR b) XNOR c;\r\nepc <= (a XOR b) XNOR c;\r\nopc <= a XOR b XOR c;\r\nend arc_pgc;`}\r\n\r\npracimg={img6}\r\n/>    \r\n</div>\r\n    )\r\n}\r\n\r\n\r\nfunction StldPrac7() {\r\n    return (\r\n        <div>\r\n            <ProgramTemp\r\n        pracName = \"Practical 7\"\r\n        code = {`1. TextBench Code:-\r\n-- Code your testbench here\r\nlibrary IEEE;\r\nuse IEEE.std_logic_1164.all;\r\nentity compartor_NDR is\r\nend entity;\r\narchitecture tb of  compartor_NDR is\r\ncomponent COMPARATOR_SOURCE is\r\nport(\r\n    A : in STD_LOGIC_VECTOR (1 downto 0);\r\n    G,L,E : out STD_LOGIC\r\n    );\r\nend component;\r\nsignal A: STD_LOGIC_VECTOR(1 downto 0);\r\nsignal G,L,E : STD_LOGIC;\r\nbegin \r\nuut: COMPARATOR_SOURCE port map(\r\nA => A,G => G,\r\nL => L,E => E);\r\nstim:process\r\nbegin\r\nA <=\"00\";\r\nwait for 20 ns;\r\nA<= \"01\";\r\nwait for 20 ns;\r\nA<= \"10\";\r\nwait for 20 ns;\r\nA<= \"11\";\r\nwait for 20 ns;\r\nwait;\r\nend process;\r\nend tb;\r\n\r\n2. Design Code:-\r\n-- Code your design here\r\nlibrary IEEE;\r\nuse IEEE.std_logic_1164.all;\r\nentity COMPARATOR_SOURCE is\r\nport(\r\n    A : in STD_LOGIC_VECTOR (1 downto 0);\r\n    G,L,E : out STD_LOGIC\r\n    );\r\nend COMPARATOR_SOURCE;\r\narchitecture arc_comparator of COMPARATOR_SOURCE is\r\nbegin \r\nprocess(A)\r\nbegin\r\nG<='0';\r\nL<='0';\r\nE<='0';\r\nif(A(0) < A(1)) then\r\n    L<='1';\r\nelsif(A(0) > A(1)) then\r\n    G<='1';\r\nelse\r\n    E<='1';\r\nend if;\r\nend process;\r\nend arc_comparator;`}\r\n\r\npracimg={img7}\r\n/>    \r\n</div>\r\n    )\r\n}\r\n\r\n\r\n\r\nfunction StldPrac8() {\r\n    return (\r\n        <div>\r\n            <ProgramTemp\r\n        pracName = \"Practical 8\"\r\n        code = {`1. TextBench Code:-\r\n-- Code your testbench here\r\nlibrary IEEE;\r\nuse IEEE.std_logic_1164.all;\r\nentity NDR_tb is\r\nend NDR_tb;\r\narchitecture tb of NDR_tb is\r\ncomponent binary_to_gray is\r\nport(\r\n    bin : in std_logic_vector(3 downto 0); \r\n    G : out std_logic_vector(3 downto 0)\r\n    );\r\nend component;\r\nsignal bin,G : std_logic_vector(3 downto 0);\r\nbegin \r\nuut: binary_to_gray port map (bin => bin, G => G);\r\nstim:process\r\nbegin\r\nbin <= \"0000\";  wait for 10 ns;\r\nbin <= \"0001\";  wait for 10 ns;\r\nbin <= \"0010\";  wait for 10 ns;\r\nbin <= \"0011\";  wait for 10 ns;\r\nbin <= \"0100\";  wait for 10 ns;\r\nbin <= \"0101\";  wait for 10 ns;\r\nbin <= \"0110\";  wait for 10 ns;\r\nbin <= \"0111\";  wait for 10 ns;\r\nbin <= \"1000\";  wait for 10 ns;\r\nbin <= \"1001\";  wait for 10 ns;\r\nbin <= \"1010\";  wait for 10 ns;\r\nbin <= \"1011\";  wait for 10 ns;\r\nbin <= \"1100\";  wait for 10 ns;\r\nbin <= \"1101\";  wait for 10 ns;\r\nbin <= \"1110\";  wait for 10 ns;\r\nbin <= \"1111\";  wait for 10 ns;     \r\nwait;\r\nend process;\r\nend tb;\r\n\r\n2. Design Code :-\r\n-- Code your design here\r\nlibrary IEEE;\r\nuse IEEE.std_logic_1164.all;\r\nentity binary_to_gray is\r\nport( \r\n    bin : in std_logic_vector(3 downto 0); \r\n    G : out std_logic_vector(3 downto 0) \r\n    );\r\nend binary_to_gray;\r\narchitecture arc_binary_gray of binary_to_gray is\r\nbegin\r\nG(3) <= bin(3);\r\nG(2) <= bin(3) xor bin(2);\r\nG(1) <= bin(2) xor bin(1);\r\nG(0) <= bin(1) xor bin(0);\r\nend arc_binary_gray;`}\r\n\r\npracimg={img8}\r\n/>    \r\n</div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default StldPrac1\r\nexport {StldPrac2, StldPrac3, StldPrac4,StldPrac5,StldPrac6,StldPrac7,StldPrac8} ;","import './App.css';\nimport {BrowserRouter, Switch, Route} from \"react-router-dom\";\nimport Fifth from \"./Fifth\";\nimport Sixth from \"./Sixth\";\nimport Seventh from './Seventh';\nimport Menu from './Menu';\nimport Home from './Home';\n\n// parcticals link\nimport SSlist from \"./5thSem/ss/SSlist\";\n// SS practicals\nimport Prac1a from \"./5thSem/ss/Prac1a\";\nimport {Prac1b, Prac2, Prac3, Prac4, Prac6, Prac7, Prac8} from \"./5thSem/ss/Prac1a\";\n\nimport STLDlist from \"./5thSem/stld/STLDlist\";\n// STLD Practicals\nimport StldPrac1 from './5thSem/stld/StldPrac1';\nimport {StldPrac5, StldPrac2, StldPrac3, StldPrac4, StldPrac6, StldPrac7, StldPrac8} from \"./5thSem/stld/StldPrac1\";\n\n\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n  <BrowserRouter>    \n  <Menu/>\n    <Switch>\n{/* main navigation links */}\n<Route exact path=\"/my_cse/Fifth\"> <Fifth/> </Route>\n\n<Route exact path=\"/my_cse/Sixth\"><Sixth/></Route>\n\n<Route exact path=\"/my_cse/Seventh\"><Seventh/></Route>\n\n<Route exact path=\"/my_cse/\" ><Home/></Route>\n\n\n{/* fifth sem practical links */}\n<Route exact path=\"/my_cse/Fifth/SSlist\"><SSlist/></Route>\n{/* Programs of SS */}\n<Route exact path=\"/my_cse/Fifth/SSlist/Prac1a\"> <Prac1a/> </Route>\n<Route exact path=\"/my_cse/Fifth/SSlist/Prac1b\"> <Prac1b/> </Route>\n<Route exact path=\"/my_cse/Fifth/SSlist/Prac2\"> <Prac2/> </Route>\n<Route exact path=\"/my_cse/Fifth/SSlist/Prac3\"> <Prac3/> </Route>\n<Route exact path=\"/my_cse/Fifth/SSlist/Prac4\"> <Prac4/> </Route>\n<Route exact path=\"/my_cse/Fifth/SSlist/Prac6\"> <Prac6/> </Route>\n<Route exact path=\"/my_cse/Fifth/SSlist/Prac7\"> <Prac7/> </Route>\n<Route exact path=\"/my_cse/Fifth/SSlist/Prac8\"> <Prac8/> </Route>\n\n\n<Route exact path=\"/my_cse/Fifth/STLDlist\"><STLDlist/></Route>\n{/* programs of STLd */}\n<Route exact path=\"/my_cse/Fifth/STLDlist/StldPrac1\"> <StldPrac1/> </Route>\n<Route exact path=\"/my_cse/Fifth/STLDlist/StldPrac2\"> <StldPrac2/> </Route>\n<Route exact path=\"/my_cse/Fifth/STLDlist/StldPrac3\"> <StldPrac3/> </Route>\n<Route exact path=\"/my_cse/Fifth/STLDlist/StldPrac4\"> <StldPrac4/> </Route>\n<Route exact path=\"/my_cse/Fifth/STLDlist/StldPrac5\"> <StldPrac5/> </Route>\n<Route exact path=\"/my_cse/Fifth/STLDlist/StldPrac6\"> <StldPrac6/> </Route>\n<Route exact path=\"/my_cse/Fifth/STLDlist/StldPrac7\"> <StldPrac7/> </Route>\n<Route exact path=\"/my_cse/Fifth/STLDlist/StldPrac8\"> <StldPrac8/> </Route>\n\n\n\n</Switch>\n</BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}