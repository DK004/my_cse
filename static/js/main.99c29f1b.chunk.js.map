{"version":3,"sources":["Card.jsx","images/ss.gif","images/stld.gif","Fifth.jsx","images/database.gif","images/os.gif","Sixth.jsx","images/dda.gif","images/dsp.gif","images/ooad.gif","Seventh.jsx","Menu.jsx","images/Home.svg","Home.jsx","List.jsx","5thSem/ss/SSlist.jsx","ProgramTemp.jsx","5thSem/images5th/SS Practical 1 a.jpeg","5thSem/images5th/SS Practical 1 b.jpeg","5thSem/images5th/SS Practical 2.jpeg","5thSem/images5th/SS Practical 3.jpeg","5thSem/images5th/SS Practical 4.jpeg","5thSem/images5th/SS Practical 6.jpeg","5thSem/images5th/SS Practical 7.jpeg","5thSem/images5th/SS Practical 8.jpeg","5thSem/ss/Prac1a.jsx","5thSem/stld/STLDlist.jsx","5thSem/images5th/STLD Practical 1.jpg","5thSem/images5th/STLD Practical 2.jpg","5thSem/images5th/STLD Practical 3.jpg","5thSem/images5th/STLD Practical 4.jpeg","5thSem/images5th/STLD Practical 5.jpg","5thSem/images5th/STLD Practical 6.jpg","5thSem/images5th/STLD Practical 7.jpg","5thSem/images5th/STLD Practical 8.jpg","5thSem/stld/StldPrac1.jsx","6thSem/os/OSlist.jsx","6thSem/images6th/OS Practical 1.jpg","6thSem/images6th/OS Practical 2.jpg","6thSem/images6th/OS Practical 3.jpg","6thSem/images6th/OS Practical 4.jpg","6thSem/images6th/OS Practical 5.jpg","6thSem/images6th/OS Practical 6.jpg","6thSem/images6th/OS Practical 7.jpg","6thSem/images6th/OS Practical 8.jpg","6thSem/os/OsPrac1.jsx","6thSem/dbms/DBMSlist.jsx","6thSem/images6th/DBMS Practical 2.jpg","6thSem/images6th/DBMS Practical 3.jpg","6thSem/images6th/DBMS Practical 4.jpg","6thSem/images6th/DBMS Practical 5.jpg","6thSem/images6th/DBMS Practical 6.jpg","6thSem/images6th/DBMS Practical 7.jpg","6thSem/images6th/DBMS Practical 8.jpg","6thSem/dbms/DBMSPrac1.jsx","7thSem/dsp/DSPlist.jsx","7thSem/images7th/DSP Practical 1.jpg","7thSem/images7th/DSP Practical 2.jpg","7thSem/dsp/DSPPrac1.jsx","7thSem/daa/DAAlist.jsx","7thSem/images7th/DAA Practical 1.jpg","7thSem/images7th/DAA Practical 2.jpg","7thSem/daa/DAAPrac1.jsx","App.js","index.js"],"names":["Card","props","className","exact","to","link","src","imgsrc","alt","title","Fifth","SS","STLD","Sixth","DBS","OS","Seventh","DSP","DAA","OOAD","Menu","activeClassName","type","id","Home","style","height","color","home","class","List","prac","fontSize","aim","SSlist","ProgramTemp","pracName","code","pracimg","Prac1b","img1b","Prac2","img2","Prac3","img3","Prac4","img4","Prac6","img6","Prac7","img7","Prac8","img8","prac1a","img1","STLDlist","StldPrac2","StldPrac3","StldPrac4","StldPrac5","img5","StldPrac6","StldPrac7","StldPrac8","StldPrac1","OSlist","OsPrac2","OsPrac3","OsPrac4","OsPrac5","OsPrac6","OsPrac7","OsPrac8","OsPrac1","DBMSlist","DBMSPrac2","DBMSPrac3","DBMSPrac4","DBMSPrac5","DBMSPrac6","DBMSPrac7","DBMSPrac8","DBMSPrac1","frameBorder","allow","allowFullScreen","DSPlist","DSPPrac2","DSPPrac1","DAAlist","DAAPrac2","DAAPrac1","App","path","Prac1a","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99c29f1b.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction Card(props) {\r\n    return (\r\n        \r\n<div className=\"card\" >\r\n<NavLink exact to={props.link}>\r\n  <img src={props.imgsrc} className=\"card-img-top\" alt=\"subject-img\"/>\r\n  <div className=\"card-body\">\r\n    <h5 className=\"card-title\">{props.title}</h5>\r\n  </div>\r\n</NavLink>\r\n</div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Card\r\n","export default __webpack_public_path__ + \"static/media/ss.8c1602f7.gif\";","export default __webpack_public_path__ + \"static/media/stld.89d77d27.gif\";","import React from 'react';\r\nimport Card from './Card';\r\nimport SS from \"./images/ss.gif\";\r\nimport \"./Sem.css\";\r\nimport STLD from \"./images/stld.gif\";\r\n\r\n\r\n\r\n\r\n\r\nfunction Fifth() {\r\n    return (\r\n        <>\r\n        <div className=\"container cont1\">\r\n    <h2>5th Semester Practicals </h2>\r\n    \r\n\r\n        <div className=\"row\">\r\n            <Card\r\n            imgsrc = {SS}\r\n            link = \"/my_cse/Fifth/SSlist\"\r\n            title = \"System Software\"\r\n            />\r\n\r\n<Card\r\n            imgsrc = {STLD}\r\n            link =\"/my_cse/Fifth/STLDlist\"\r\n            title = \"Switching Theory and Logic Design\"\r\n            />\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n        </div>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default Fifth\r\n","export default __webpack_public_path__ + \"static/media/database.9e9b861e.gif\";","export default __webpack_public_path__ + \"static/media/os.691c7f24.gif\";","import React from 'react';\r\nimport DBS from \"./images/database.gif\";\r\nimport OS from \"./images/os.gif\";\r\n\r\nimport Card from './Card';\r\n\r\nfunction Sixth() {\r\n    return (\r\n\r\n        <div className=\"container cont1\">\r\n            <h2>6th Semester Practicals </h2>\r\n\r\n\r\n            <div className=\"row\">\r\n                <Card\r\n                    imgsrc={DBS}\r\n                    link=\"/my_cse/Sixth/DBMSlist\"\r\n                    title=\"Database Management System\"\r\n                />\r\n\r\n                <Card\r\n                    imgsrc={OS}\r\n                    link=\"/my_cse/Sixth/OSlist\"\r\n                    title=\"Operating System\"\r\n                />\r\n\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Sixth\r\n","export default __webpack_public_path__ + \"static/media/dda.5ca2b5ae.gif\";","export default __webpack_public_path__ + \"static/media/dsp.7f12bd32.gif\";","export default __webpack_public_path__ + \"static/media/ooad.4f6e72f7.gif\";","import React from 'react';\r\nimport Card from './Card';\r\nimport DAA from \"./images/dda.gif\";\r\nimport DSP from \"./images/dsp.gif\";\r\nimport OOAD from \"./images/ooad.gif\";\r\n\r\nfunction Seventh() {\r\n    return (\r\n        \r\n        <div className=\"container cont1\">\r\n\r\n<h2>7th Semester Practicals </h2>\r\n    \r\n    <div className=\"row\">\r\n        <Card\r\n        imgsrc = {DSP}\r\n        link =\"/my_cse/Seventh/DSPlist\"\r\n        title = \"Digital Signal Processing\"\r\n        />\r\n\r\n<Card\r\n        imgsrc = {DAA}\r\n        link =\"/my_cse/Seventh/DAAlist\"\r\n        title = \"Design and Analysis of Algorithm\"\r\n        />\r\n\r\n\r\n\r\n<Card\r\n        imgsrc = {OOAD}\r\n        link =\"/my_cse/Seventh/OOADlist\"\r\n        title = \"Object Oriented Analysis & Design\"\r\n        />\r\n\r\n\r\n\r\n\r\n    </div>\r\n    </div>\r\n    \r\n    )\r\n}\r\n\r\nexport default Seventh\r\n","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nfunction Menu() {\r\n    return (\r\n        <div>\r\n            \r\n     <nav className=\"navbar main-menu navbar-expand-lg navbar-dark bg-light\">\r\n  <div className=\"container-fluid\">\r\n    <NavLink className=\"navbar-brand\" activeClassName=\"active\" exact to=\"/my_cse/\">My-Cse</NavLink>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n     \r\n      <ul className=\"navbar-nav\">\r\n\r\n        <li className=\"nav-item\">\r\n          <NavLink className=\"nav-link\"  exact to=\"/my_cse/Fifth\" >5th Sem</NavLink>\r\n        </li>\r\n\r\n        <li className=\"nav-item\">\r\n          <NavLink className=\"nav-link\" exact  to=\"/my_cse/Sixth\" >6th Sem</NavLink>\r\n        </li>\r\n\r\n        <li className=\"nav-item\">\r\n          <NavLink className=\"nav-link\" exact to=\"/my_cse/Seventh\"  >7th Sem</NavLink>\r\n        </li>\r\n        \r\n      </ul>\r\n    </div>\r\n  </div>\r\n\r\n</nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Menu;\r\n\r\n","export default __webpack_public_path__ + \"static/media/Home.26a4d693.svg\";","import React from 'react';\r\nimport home from \"./images/Home.svg\";\r\nimport \"./Home.css\";\r\n\r\nfunction Home() {\r\n    return (\r\n    <>\r\n        {/* <div id=\"homemain\" className=\"text-center\">\r\n            \r\n            <div id=\"hometxt\">\r\n            <h1 id=\"h1\">\r\n            Welcome to MY-CSE\r\n            </h1>\r\n            <p id=\"p\">\r\n            Get all your Practicals at one Place.\r\n            </p>\r\n            </div>\r\n\r\n            <div id=\"homeimg\" >\r\n            <img src={home} alt=\"img\"/>\r\n            </div>\r\n\r\n        </div>   */}\r\n\r\n        <div className=\"container-fluid main_header\">\r\n        <div className=\"row\">\r\n            <div className=\"col-md-10 col-12 mx-auto\">\r\n                <div className=\"row\" style={{height:\"92vh\"}}>\r\n                    <div className=\"col-md-6 col-12 main_left\">\r\n                        <h1  >Welcome to <span style={{color:\"var(--orange)\"}}>MY_CSE</span></h1>\r\n                        <h3>\r\n                        Get all your Practicals at one Place.\r\n                        </h3>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-6 col-12 main_right\">\r\n                        \r\n                             \r\n                                <img src={home} class=\"d-block w-100\" alt=\"illustration\"/>\r\n                              \r\n                              \r\n                    \r\n                          </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n        </div>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Eye from '@mui/icons-material/DescriptionOutlined';\r\n\r\n//styling in app.css \r\nfunction List(props) {\r\n    return (\r\n        <div className=\"container index my-4\">\r\n            <h3>{props.prac}</h3>\r\n            <p style={{fontSize:\"1.15rem\"}}>Aim : {props.aim}</p>\r\n            <NavLink exact to={props.link} ><button type=\"button\" className=\"btn btn-default\"><Eye />View</button></NavLink>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List;\r\n","import React from 'react'\r\nimport List from \"../../List\";\r\n\r\n\r\nfunction SSlist() {\r\n    return (\r\n        <div className=\"main-list row mt-5 container \" >\r\n            <h2>System Software</h2>\r\n            <hr/>\r\n            \r\n            <List\r\n            prac = \"Practical 1a\"\r\n            aim = \"Write a C program to construct Regular expression for accepting all alphabets\"\r\n            link=\"/my_cse/Fifth/SSlist/Prac1a\"\r\n             />\r\n\r\n<List\r\n            prac = \"Practical 1b\"\r\n            aim = \" Write a C program to construct Regular expression for accepting digits and special symbol\"\r\n            link=\"/my_cse/Fifth/SSlist/Prac1b\"\r\n             />\r\n\r\n<List\r\n            prac = \"Practical 2\"\r\n            aim = \"Write a C program to simulate Lexical Analyzer for vaildating operators\"\r\n            link=\"/my_cse/Fifth/SSlist/Prac2\"\r\n             />\r\n\r\n<List\r\n            prac = \"Practical 3\"\r\n            aim = \"Design and develop a C program to compute FIRST and FOLLOWS\"\r\n            link=\"/my_cse/Fifth/SSlist/Prac3\"\r\n             />\r\n\r\n<List\r\n            prac = \"Practical 4\"\r\n            aim = \"Design and develop a C program to simulate Deterministic Finite Automatio (DFA) for the string which ending with 'abb' \"\r\n            link=\"/my_cse/Fifth/SSlist/Prac4\"\r\n             />\r\n\r\n\r\n        \r\n        <List\r\n            prac = \"Practical 6\"\r\n            aim = \"Design and develop a C program to findout SLR parser\"\r\n            link=\"/my_cse/Fifth/SSlist/Prac6\"\r\n             />\r\n\r\n<List\r\n            prac = \"Practical 7\"\r\n            aim = \" Design and develop a C program to insert(), delete(), sort(), search(), display() using Data Structure.\"\r\n            link=\"/my_cse/Fifth/SSlist/Prac7\"\r\n             />\r\n\r\n<List\r\n            prac = \"Practical 8\"\r\n            aim = \"Implement a C program for 3 address code\"\r\n            link=\"/my_cse/Fifth/SSlist/Prac8\"\r\n             />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SSlist\r\n","import React from 'react';\r\n// eslint-disable-next-line \r\nimport Prism from \"prismjs\";\r\nimport \"./prism.css\";\r\n\r\nfunction ProgramTemp(props) {\r\n    return (\r\n        <div className=\"mb-5\">\r\n<h2 className=\"container mt-5 mb-2 mx-auto\">{props.pracName} </h2>\r\n        <hr/>\r\n        <div className=\"contanier mb-4 code\" >\r\n            <pre className=\"language-c++\" >\r\n            <code>{props.code}</code>\r\n            </pre>\r\n        </div>\r\n        <h2 className=\"container mt-5 mb-2 mx-auto\">Output </h2>\r\n        <hr className=\"mb-3\" />\r\n        <div className=\"text-center\">\r\n        <img className=\"img-fluid\" src={props.pracimg} alt=\"pracimage\"/>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProgramTemp\r\n","export default __webpack_public_path__ + \"static/media/SS Practical 1 a.3559a6d6.jpeg\";","export default __webpack_public_path__ + \"static/media/SS Practical 1 b.413ed10c.jpeg\";","export default __webpack_public_path__ + \"static/media/SS Practical 2.fd235548.jpeg\";","export default __webpack_public_path__ + \"static/media/SS Practical 3.a1eb079d.jpeg\";","export default __webpack_public_path__ + \"static/media/SS Practical 4.6068261f.jpeg\";","export default __webpack_public_path__ + \"static/media/SS Practical 6.d6f08d3c.jpeg\";","export default __webpack_public_path__ + \"static/media/SS Practical 7.ac42efbf.jpeg\";","export default __webpack_public_path__ + \"static/media/SS Practical 8.123b8cea.jpeg\";","import React from 'react';\r\nimport ProgramTemp from '../../ProgramTemp';\r\nimport img1 from \"../images5th/SS Practical 1 a.jpeg\";\r\nimport img1b from \"../images5th/SS Practical 1 b.jpeg\";\r\nimport img2 from \"../images5th/SS Practical 2.jpeg\";\r\nimport img3 from \"../images5th/SS Practical 3.jpeg\";\r\nimport img4 from \"../images5th/SS Practical 4.jpeg\";\r\nimport img6 from \"../images5th/SS Practical 6.jpeg\";\r\nimport img7 from \"../images5th/SS Practical 7.jpeg\";\r\nimport img8 from \"../images5th/SS Practical 8.jpeg\";\r\n\r\n\r\nfunction prac1a() {\r\n    return (\r\n        <div>\r\n       <ProgramTemp\r\n        pracName = \"Practical 1a\"\r\n        code = {`#include < stdio.h>\r\n#include < string.h>\r\nint main()\r\n        {\r\nchar a[30printf(\"enter the  String: \");\r\n];\r\n    int i , l , flag = 0;\r\n            scanf(\"%s\",a);\r\n    l = strlen(a);\r\nfor(i=0;i<l;i++)\r\n    {\r\nif((a[i]>=65&&a[i]<=90)||(a[i]>=97&&a[i]<=122))\r\n{\r\nflag++;\r\n}\r\n}\r\n        if(flag==l)\r\n{\r\nprintf(\"String is accepted\");\r\n}\r\nelse\r\n{\r\n    printf(\"String is rejected\");\r\n}\r\n}`}\r\n\r\npracimg={img1}\r\n       />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction Prac1b(){\r\n    return(\r\n        <>\r\n  <div>\r\n       <ProgramTemp\r\n        pracName = \"Practical 1b\"\r\n        code = {`#include < stdio.h>\r\n#include < string.h>\r\nint main()\r\n{\r\nchar a[10];\r\n    int i ,flag = 0;\r\nprintf(\"enter the String: \");\r\nscanf(\"%s\",a);\r\nfor(i=0;i<strlen(a);i++)\r\n{\r\n        if(!(a[i]>=65&&a[i]<=90)||(a[i]>=97&&a[i]<=122))\r\n    {\r\n            flag++;\r\n            }\r\n            }\r\n            if(flag==strlen(a))\r\n        {\r\n            printf(\"String is accepted\");\r\n            }\r\n            else\r\n                {\r\n                printf(\"String is rejected\");\r\n}\r\n}`}\r\n\r\npracimg={img1b}\r\n       />\r\n        </div>\r\n        </>\r\n    )\r\n};\r\n\r\n\r\nfunction Prac2(){\r\n    return(\r\n        <div>\r\n        <ProgramTemp\r\n         pracName = \"Practical 2\"\r\n    code = {`#include < stdio.h>\r\n#include < string.h>\r\nint main()\r\n{\r\nchar a[100],id[100];\r\nint i,c=1,n;\r\n\r\nprintf(\"enter the  string: \");\r\nscanf(\"%s\",a);\r\nn = strlen(a);\r\n    printf(\"\\nLexixal Analyzer :=\\n\\n\");\r\n    \r\nfor(i=0;i< n;i++)\r\n{\r\n    if((a[i]>=65&&a[i]<=90)||(a[i]>=97&&a[i]<=122))\t\t\t//Check for Identifier A-Z and a-z\r\n{\r\nwhile((a[i]>=65&&a[i]<=90)||(a[i]>=97&&a[i]<=122))\r\n{\r\nstrcpy(id,a);\r\nprintf(\"%c\",id[i]);\r\ni++;\r\n}\r\nprintf(\" is a identifier - id%d\\n\",c);\r\nc++;\r\n}\r\nif(a[i]>=48&&a[i]<=57)\t\t\t\t\t\t\t\t\t\t//check for Digit 0-9\r\n{\r\n    while(a[i]>=48&&a[i]<=57)\r\n{\r\n    strcpy(id,a);\r\nprintf(\"%c\",id[i]);\r\n    i++;\r\n    }\r\n    printf(\" is a constant\\n\");\r\n}\t\r\nif(a[i]==42 || a[i]==43 || a[i]==45 || a[i]==47 || a[i]==61) //check for Operator +,-,/,=,*\t\r\n{\r\nstrcpy(id,a);\r\n    printf(\"%c\",id[i]);\r\n    printf(\" is a oprator\\n\");\r\n}\r\nif(a[i]==40 || a[i]==41)\t\t\t\t\t\t\t\t\t//check for Parenthesis '(' ')'\t\r\n{\r\nstrcpy(id,a);\r\n    printf(\"%c\",id[i]);\r\n    printf(\" is a Parenthesis\\n\");\r\n}\r\n}\r\n}`}\r\n \r\n pracimg={img2}\r\n        />\r\n         </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Prac3(){\r\n    return(\r\n        <>\r\n  <div>\r\n       <ProgramTemp\r\n        pracName = \"Practical 3\"\r\ncode = {`#include< stdio.h>\r\n#include< string.h>\r\nvoid main()\r\n{\r\nchar S[20],L[20],R[20];\r\nint lenS,lenL,i;\r\n\r\nprintf(\"Enter the production of S-> \");\r\nscanf(\"%s\",S);\r\nprintf(\"Enter the production of L-> \");\r\nscanf(\"%s\",L);\r\n\r\nlenS=strlen(S);\r\nlenL=strlen(L);\r\n\r\nfor(i=0; i< lenS ;i++)\r\n{\r\n    if(S[0]>=97 && S[0]<=123){\t\t\t\r\n        R[0]=S[0];\r\n    }\r\n    if(S[0]==65){\t\t\t\t\t\t//FIRST of S Second Rule\r\n        if(L[0]>=97 && L[0]<=123){\t\t\r\n            R[0]=L[0];\r\n        }\r\n    }\r\n    if(S[i]==76){\t\t\t\t\t\t//FOLLOW of L\r\n        R[1]=S[i+1];\r\n    }\r\n    if(S[i]==83)\r\n    {\r\n        R[2]=S[i+1];\t\t\t\t\t//FOLLOW of S\r\n    }\r\n}\r\nprintf(\"\\nFRIST of S\\t:: %c\",R[0]);\r\n\r\nfor(i=0;i< lenL;i++)\r\n{\r\n    if(L[0]>=97 && L[0]<=123){\t\t\t//FIRST of L First Rule\r\n        R[0]=L[0];\r\n    }\r\n    if(L[0]==65){\t\t\t\t\t\t//FIRST of L Second Rule\r\n        if(S[0]>=97 && S[0]<=123){\t\t\r\n            R[0]=S[0];\r\n        }\r\n    }\r\n    if(L[i]==76){\t\t\t\t\t\t//FOLLOW of L\r\n        R[1]=L[i+1];\r\n    }\r\n    if(L[i]==83){\t\t\t\t\t\t//FOLLOW of S\r\n        R[2]=L[i+1];\r\n    }\r\n}\r\nprintf(\"\\nFRIST of L\\t:: %c\",R[0]);\r\n\r\nif(R[2]=='\\0')\r\n    printf(\"\\nFOLLOW of S\\t:: $\");\r\nelse\r\n    printf(\"\\nFOLLOW of S\\t:: %c\",R[2]);\r\n    \r\nif(R[1]=='\\0')\r\n    printf(\"\\nFOLLOW of L\\t:: $\");\r\nelse\r\n    printf(\"\\nFOLLOW of L\\t:: %c\",R[1]);\r\n}`}\r\n\r\npracimg={img3}\r\n       />\r\n        </div>\r\n        </>\r\n    )\r\n};\r\n\r\n\r\n\r\nfunction Prac4(){\r\n    return(\r\n        <>\r\n  <div>\r\n       <ProgramTemp\r\n        pracName = \"Practical 4\"\r\n    code = {` #include < stdio.h>\r\n    #include< string.h>\r\nvoid main()\r\n    {\r\nint i,cs=0,len=0;\r\nchar str[10];\r\n    printf(\"Input a string :: \");\r\n    scanf(\"%s\",str);\r\n    len=strlen(str);\r\n    printf(\"\\n\");\r\n    for(i=0;i<len;i++)\r\n{\r\n    if(cs==0){\r\n    if(str[i]=='a'){\r\n    cs=1;\r\n    printf(\"q%d->\",cs);\r\n    }\r\nelse{\r\nif(str[i]=='b'){\r\ncs=0;\r\n    printf(\"q%d->\",cs);\r\n    }\r\n    }\r\n}\r\nelse if(cs==1){\r\nif(str[i]=='a'){\r\n    cs=1;\r\nprintf(\"q%d->\",cs);\r\n    }\r\nelse{\r\nif(str[i]=='b'){\r\ncs=2;\r\n    printf(\"q%d->\",cs);\r\n    }\r\n}\r\n}\r\n    else if(cs==2){\r\n    if(str[i]=='a'){\r\n    cs=3;\r\nprintf(\"q%d->\",cs);\r\n}\r\n    else{\r\n    if(str[i]=='b'){\r\n    cs=0;\r\n    printf(\"q%d->\",cs);\r\n}\r\n}\r\n}\r\n            else if(cs==3){\r\nif(str[i]=='a'){\r\ncs=1;\r\n    printf(\"q%d->\",cs);\r\n}\r\n    else{\r\nif(str[i]=='b'){\r\ncs=2;\r\n            printf(\"q%d->\",cs);\r\n}\r\n}\r\n    }\r\n    }\r\n    if(cs==3){\r\n    printf(\"\\n\\nString is Accepted\");\r\n}\r\n    else{\r\n    printf(\"\\n\\nString is Rejected\");\r\n}\r\n}`}\r\n\r\npracimg={img4}\r\n       />\r\n        </div>\r\n        </>\r\n    )\r\n};\r\n\r\n\r\n\r\n\r\nfunction Prac6(){\r\n    return(\r\n        <>\r\n  <div>\r\n       <ProgramTemp\r\n        pracName = \"Practica 6\"\r\n        code = {`#include< stdio.h>\r\n#include< string.h>\r\nint strp=0,stkp=0;\r\nchar str[20],stack[20];\r\nvoid reduce()\r\n{\r\nint i,stack_len;\r\nchar str1[]=\"E+E\",str2[]=\"E*E\";\r\nstack_len=strlen(stack);\r\nfor(i=0;i< stack_len;i++)\r\n{\r\n    if(stack[i]=='a'){\r\n        stack[i]='E';\r\n    }\r\n    if(stack[i]=='b'){\r\n        stack[i]='E';\r\n    }\r\n\r\n}\r\n    if(strcmp(stack,str1)==0){\r\n        strcpy(stack,\"E\");\r\n        stkp-=2;\r\n    }\r\n    if(strcmp(stack,str2)==0){\r\n        strcpy(stack,\"E\");\r\n        stkp-=2;\r\n    }\r\n}\r\nvoid main()\r\n{\r\nint len,i;\r\nprintf(\"Given Grammar is :\\n\\tE->E+E\\n\\tE->E*E\\n\\tE->a\\n\\tE->b\");\r\nprintf(\"\\nEnter the string :: \");\r\nscanf(\"%s\",str);\r\nlen=strlen(str);\r\nstack[0]=str[0];\r\nstrp++;\r\nstkp++;\r\nfor(i=0;i< len;i++)\r\n{\r\n    reduce();\r\n    stack[stkp]=str[strp];\r\n    strp++;\r\n    stkp++;\t\r\n}\r\nreduce();\r\nif((stack[0]=='E') && (stack[1]=='\\0')){\r\n    printf(\"\\nString is Accepted\");\r\n    printf(\"\\nString %c\",stack[0]);\r\n}\r\nelse{\r\n    printf(\"\\nString is Rejected\");\r\n}\r\n}`}\r\n\r\npracimg={img6}\r\n       />\r\n        </div>\r\n        </>\r\n    )\r\n};\r\n\r\n\r\n\r\n\r\nfunction Prac7(){\r\n    return(\r\n        <>\r\n  <div>\r\n       <ProgramTemp\r\n        pracName = \"Practical 7\"\r\n        code = {`#include < stdio.h>\r\n\r\nint insert_no(int a[],int n)\r\n{\r\nint i,item,loc;\r\nprintf(\"Input the array element to insert :: \");\r\nscanf(\"%d\",&item);\r\nprintf(\"Input the location :: \");\r\nscanf(\"%d\",&loc);\r\n\r\nif(loc< =n)\r\n{\r\n    for(i=n-1;i>=loc-1;i--){\r\n    a[i+1] = a[i];\r\n    }\r\n    a[loc-1] = item;\r\n    printf(\"\\nItem %d is inseted to %d location\\n\",item,loc);\r\n    n++;\r\n}\r\nelse{\r\n    printf(\"\\nPlease Input less than %d location\",n);\r\n}\r\n\r\nprintf(\"\\n\");\r\nreturn n;\r\n}\r\n\r\nint delete_no(int a[],int n)\r\n{\r\nint item=0,i,loc;\r\nprintf(\"Input the location from where to be delete :: \");\r\nscanf(\"%d\",&loc);\r\nif(loc< =n+1)\r\n{\r\n    item=a[loc-1];\r\n    printf(\"\\nItem %d is deleted form %d location\\n\",item,loc);\r\n    for(i=loc-1;i<=n-1;i++)\r\n        a[i]=a[i+1];\r\n    n--;\r\n}\r\nelse{\r\n    printf(\"\\nPlease Input less than %d location\",n);\r\n}\r\n\r\nprintf(\"\\n\");\r\nreturn n;\r\n}\r\n\r\nvoid sort_list(int a[],int n)\r\n{\r\nint i,j,temp=0;\r\n\r\nfor(i=0;i< n;i++) {\r\n    for(j=i;j< n-1;j++) {\r\n        if(a[j]>a[j+1]) {\r\n            temp=a[j];\r\n            a[j]=a[j+1];\r\n            a[j+1]=temp;\r\n        }\r\n    }\r\n}\r\nprintf(\"Sorted List is :: \");\r\nfor(i=0;i<n;i++){\r\n    printf(\"%d \",a[i]);\r\n}\r\nprintf(\"\\n\");\r\n}\r\nvoid search_no(int a[],int n)\r\n{\r\nint item,i,flag=0;\r\nprintf(\"Input a serch element :: \");\r\nscanf(\"%d\",&item);\r\n\r\n    for(i=0;i< n;i++){\r\n        if(a[i]==item){\r\n            flag=i;\r\n            break;\r\n        }\r\n    }\r\n    if(flag>0){\r\n        printf(\"\\nItem %d is found at location %d \",item,flag+1);\r\n    }\r\n    else{\r\n        printf(\"\\nItem %d is not in list\",item);\r\n    }\r\n\r\nprintf(\"\\n\");\r\n}\r\nvoid display_list(int a[],int n)\r\n{\r\nint i;\r\nprintf(\"\\nElement in list :: \");\r\nfor(i=0;i< n;i++){\r\n    printf(\"%d \",a[i]);\r\n}\r\n}\r\nvoid main()\r\n{\r\nint i, n,arr[100],ch,del_loc=0;\r\nprintf(\"Input the array size :: \");\r\nscanf(\"%d\",&n);\r\nprintf(\"Input the array element :: \");\r\nfor(i=0;i< n;i++)\r\n    scanf(\"%d\",&arr[i]);\r\n\r\ndo{\r\n    printf(\"\\n0. Exit\");\r\n    printf(\"\\n1. INSERT\");\r\n    printf(\"\\n2. DELETE\");\r\n    printf(\"\\n3. SEARCH\");\r\n    printf(\"\\n4. SORT\");\r\n    printf(\"\\n5. SHOW\\n\");\r\n    \r\n    printf(\"\\nEnter your choise :: \");\r\n    scanf(\"%d\",&ch);\r\n    printf(\"\\n\");\r\n    switch(ch)\r\n    {\r\n        case 1:n=insert_no(arr,n); display_list(arr,n); break;\r\n        case 2:n=delete_no(arr,n); display_list(arr,n); break;\r\n        case 3:search_no(arr,n); break;\r\n        case 4:sort_list(arr,n); break;\r\n        case 5:display_list(arr,n); break;\r\n    }\r\n}while(ch);\r\n}`}\r\n\r\npracimg={img7}\r\n       />\r\n        </div>\r\n        </>\r\n    )\r\n};\r\n\r\n\r\n\r\n\r\nfunction Prac8(){\r\n    return(\r\n        <>\r\n  <div>\r\n       <ProgramTemp\r\n        pracName = \"Practical 8\"\r\ncode = {`#include< stdio.h>\r\n#include< string.h>\r\nvoid pm();\r\nvoid plus();\r\nint i,len;\r\nchar expe[10],exp1[10],expe2[10];\r\nvoid main()\r\n{\r\n    printf(\"Enter the Expression:: \");\r\n    scanf(\"%s\",expe);\r\n    strcpy(exp1,expe);\r\n    len=strlen(exp1);\r\n    expe2[0]='\\0';\r\n    for(i=0;i< len;i++)\r\n    {\r\n        if((exp1[i]=='+') || exp1[i]=='-'){\r\n            if(exp1[i+2]=='*'){\r\n                pm();\r\n                break;\r\n            }\r\n            else{\r\n                plus();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\nvoid pm()\r\n{\r\n    strrev(exp1);\r\n    int j=len-i-1;\r\n    strncat(expe2,exp1,j);\r\n    strrev(expe2);\r\n    printf(\"\\n\\tThree Address Code :: \\n\\ttemp=%s \\n\\ttemp1=%c%ctemp\\n\",expe2,exp1[j+1],exp1[j]);\r\n}\r\nvoid plus()\r\n{\r\n    strncat(expe2,exp1,i+2);\r\n    printf(\"\\n\\tThree Address Code :: \\n\\t\\ttemp=%s \\n\\t\\ttemp1=temp%c%c\\n\",expe2,exp1[i+2],exp1[i+3]);\r\n}`}\r\n\r\npracimg={img8}\r\n       />\r\n        </div>\r\n        </>\r\n    )\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default prac1a;\r\n\r\nexport {Prac1b, Prac2, Prac3, Prac4,Prac6,Prac7,Prac8};\r\n","import React from 'react'\r\nimport List from \"../../List\";\r\n\r\n\r\nfunction STLDlist() {\r\n    return (\r\n        <div className=\"main-list row mt-5 container \" >\r\n            <h2>Switching Theory & Logic Design</h2>\r\n            <hr/>\r\n            \r\n            <List\r\n            prac = \"Practical 1\"\r\n            aim = \" Introduction to VHDL and simulation tool\"\r\n            link=\"/my_cse/Fifth/STLDlist/StldPrac1\"\r\n             />\r\n\r\n<List\r\n            prac = \"Practical 2\"\r\n            aim = \" Design a VHDL Program for Basic and Universal Gates using Dataflow style\"\r\n            link=\"/my_cse/Fifth/STLDlist/StldPrac2\"\r\n             />\r\n\r\n<List\r\n            prac = \"Practical 3\"\r\n            aim = \" Write VHDL Program for a full Adder using Dataflow style\"\r\n            link=\"/my_cse/Fifth/STLDlist/StldPrac3\"\r\n             />\r\n\r\n<List\r\n            prac = \"Practical 4\"\r\n            aim = \"Develop a hardware program 8:1 Multiplexer using Behavoiral style\"\r\n            link=\"/my_cse/Fifth/STLDlist/StldPrac4\"\r\n             />\r\n\r\n<List\r\n            prac = \"Practical 5\"\r\n            aim = \" Write a VHDL program for 2:4 Decoders using Behavioral Style\"\r\n            link=\"/my_cse/Fifth/STLDlist/StldPrac5\"\r\n             />\r\n\r\n\r\n        \r\n        <List\r\n            prac = \"Practical 6\"\r\n            aim = \"Generate VHDL Program for Even Parity Generator using data flow style\"\r\n            link=\"/my_cse/Fifth/STLDlist/StldPrac6\"\r\n             />\r\n\r\n<List\r\n            prac = \"Practical 7\"\r\n            aim = \" Write a VHDL program for 1 bit Comparator using Dataflow Style\"\r\n            link=\"/my_cse/Fifth/STLDlist/StldPrac7\"\r\n             />\r\n\r\n<List\r\n            prac = \"Practical 8\"\r\n            aim = \" Write a program for binary to gray code converter using data flow style\"\r\n            link=\"/my_cse/Fifth/STLDlist/StldPrac8\"\r\n             />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default STLDlist\r\n","export default __webpack_public_path__ + \"static/media/STLD Practical 1.175e0509.jpg\";","export default __webpack_public_path__ + \"static/media/STLD Practical 2.0372e36f.jpg\";","export default __webpack_public_path__ + \"static/media/STLD Practical 3.bdaf1abc.jpg\";","export default __webpack_public_path__ + \"static/media/STLD Practical 4.eaa3a0d3.jpeg\";","export default __webpack_public_path__ + \"static/media/STLD Practical 5.560e3412.jpg\";","export default __webpack_public_path__ + \"static/media/STLD Practical 6.e79b8d7c.jpg\";","export default __webpack_public_path__ + \"static/media/STLD Practical 7.efd7a28e.jpg\";","export default __webpack_public_path__ + \"static/media/STLD Practical 8.79ca5e8a.jpg\";","import React from 'react'\r\nimport ProgramTemp from '../../ProgramTemp';\r\nimport img1 from \"../images5th/STLD Practical 1.jpg\";\r\nimport img2 from \"../images5th/STLD Practical 2.jpg\";\r\nimport img3 from \"../images5th/STLD Practical 3.jpg\";\r\nimport img4 from \"../images5th/STLD Practical 4.jpeg\";\r\nimport img5 from \"../images5th/STLD Practical 5.jpg\";\r\nimport img6 from \"../images5th/STLD Practical 6.jpg\";\r\nimport img7 from \"../images5th/STLD Practical 7.jpg\";\r\nimport img8 from \"../images5th/STLD Practical 8.jpg\";\r\n\r\n\r\n\r\nfunction StldPrac1() {\r\n    return (\r\n        <div>\r\n            <ProgramTemp\r\n        pracName = \"Practical 1\"\r\n        code = {` 1. TestBench CODE :-\r\n    \r\n------ Code your testbench here -------\r\nlibrary IEEE;\r\nuse IEEE.std_logic_1164.all;\r\nentity HA_tb is\r\nend entity;\r\narchitecture tb of HA_tb is\r\ncomponent HA is\r\nport(a,b: in std_logic; s,c:out std_logic);\r\nend component;\r\nsignal a,b,s,c: std_logic;\r\nbegin\r\nuut: HA port map(a => a, b=> b, s=>s, c=>c);\r\nstim:process\r\nbegin\r\na < = '0';\r\nb < = '0';\r\nwait for 20 ns;\r\na <= '0';\r\nb <= '1';\r\nwait for 20 ns;\r\na <= '1';\r\nb <= '0';\r\nwait for 20 ns;\r\na <= '1';\r\nb <= '1';\r\nwait for 20 ns;\r\nwait;\r\nend process;\r\nend tb;\r\n    \r\n        \r\n2. Desgin CODE :-\r\n------ Code your design here -------\r\nlibrary IEEE;\r\nuse IEEE.std_logic_1164.all;\r\nentity HA is\r\nport(a,b: in std_logic; s,c:out std_logic);\r\nend HA;\r\narchitecture df of HA is\r\nbegin\r\ns <= a XOR b;\r\nc <= a AND b;\r\nend df;`}\r\n\r\npracimg={img1}\r\n/>    \r\n</div>\r\n    )\r\n}\r\n\r\n\r\nfunction StldPrac2() {\r\n    return (\r\n        <div>\r\n            <ProgramTemp\r\n        pracName = \"Practical 2\"\r\n        code = {`1. Testbench CODE :-\r\n-- Code your testbench here\r\nlibrary IEEE;\r\nuse IEEE.std_logic_1164.all;\r\nentity un_tb is\r\nend un_tb;\r\narchitecture tb of un_tb is\r\ncomponent un_gate is\r\nport(\r\na: in bit;\r\nb: in bit;\r\nor_out: out bit;\r\nand_out: out bit;\r\nnand_out: out bit;\r\nnor_out: out bit\r\n);\r\nend component;\r\nsignal a,b,or_out,and_out,nand_out,nor_out: bit;\r\nbegin\r\n-- Connect DUT\r\nDUT: un_gate port map(\t\r\na=>a,b=>b,\r\nor_out => or_out,\r\nand_out => and_out,\r\nnand_out => nand_out,\r\nnor_out => nor_out);\r\nprocess\r\nbegin\r\na <= '0';\r\nb <= '0';\r\nwait for 1ns;\r\na <= '0';\r\nb <= '1';\r\nwait for 1ns;\r\na <= '1';\r\nb <= '0';\r\nwait for 1ns;\r\na <= '1';\r\nb <= '1';\r\nwait for 1ns;\r\nwait;\r\nend process;\r\nend tb;\r\n\r\n2. Desgin CODE :-\r\n-- Code your design here\r\nlibrary IEEE;\r\nuse IEEE.std_logic_1164.all;\r\nentity UN_gate is\r\nport(\r\na: in bit;\r\nb: in bit;\r\nor_out: out bit;\r\nand_out: out bit;\r\nnand_out: out bit;\r\nnor_out: out bit\r\n);\r\nend UN_gate;\r\narchitecture arc_UN of UN_gate is\r\nbegin \r\nor_out   <= a or b;\r\nand_out  <= a AND b;\r\nnand_out <= a nand b ;\r\nnor_out  <= a nor b;\r\nend arc_UN;`}\r\n\r\npracimg={img2}\r\n/>    \r\n</div>\r\n    )\r\n}\r\n\r\nfunction StldPrac3() {\r\n    return (\r\n        <div>\r\n            <ProgramTemp\r\n        pracName = \"Practical 3\"\r\ncode = {`    1. Testbench CODE :-\r\n\r\n-- Code your testbench here\r\nlibrary IEEE;\r\nuse IEEE.std_logic_1164.all;\r\n\r\nentity FA_tb is\r\nend entity;\r\n\r\narchitecture tb of FA_tb is\r\n\r\ncomponent FA is\r\nport(\r\n        a,b,c: in bit; \r\n        sum,carry:out bit\r\n        );\r\n    end component;\r\n\r\n    signal a,b,c,sum,carry: bit;\r\n\r\nbegin\r\nuut: FA port map(a => a, b=> b, c=>c, sum=>sum, carry=>carry);\r\nstim:process\r\nbegin\r\na <= '0';\r\nb <= '0';\r\nc <= '0';\r\nwait for 10ns;\r\na <= '0';\r\nb <= '0';\r\nb <= '1';\r\nwait for 10ns;\r\na <= '0';\r\nb <= '1';\r\nc <= '0';\r\nwait for 10ns;\r\na <= '0';\r\nb <= '1';\r\nc <= '1';\r\nwait for 10ns;\r\na <= '1';\r\nb <= '0';\r\nc <= '0';\r\nwait for 10ns;\r\na <= '1';\r\nb <= '0';\r\nc <= '1';\r\nwait for 10ns;\r\na <= '1';\r\nb <= '1';\r\nc <= '0';\r\nwait for 10ns;\r\na <= '1';\r\nb <= '1';\r\nc <= '1';\r\nwait for 10ns;\r\nwait;\r\nend process;\r\nend tb;\r\n\r\n2. Design CODE :-\r\n\r\n-- Code your design here\r\nlibrary IEEE;\r\nuse IEEE.std_logic_1164.all;\r\n\r\nentity FA is\r\nport(\r\n        a,b,c: in bit;\r\n        sum,carry:out bit\r\n        );\r\n    end FA;\r\n    \r\narchitecture arc_fa of FA is\r\nbegin\r\nsum   <= c xor a xor b;\r\ncarry <= (a and b) or (c and (a xor b));\r\nend arc_fa;`}\r\n\r\npracimg={img3}\r\n/>    \r\n</div>\r\n    )\r\n}\r\n\r\n\r\n\r\nfunction StldPrac4() {\r\n    return (\r\n        <div>\r\n            <ProgramTemp\r\n        pracName = \"Practical 4\"\r\ncode = {`    1.TestBench code:- \r\n-- Code your testbench here\r\nlibrary ieee;\r\nuse ieee.std_logic_1164.all;\r\nentity mux_tb is\r\nend entity;\r\narchitecture tb of mux_tb is\r\ncomponent MUX_SOURCE is \r\nPort ( S : in STD_LOGIC_VECTOR (2 downto 0);\r\nI : in STD_LOGIC_VECTOR (7 downto 0);\r\nY : out STD_LOGIC);\r\nend component;\r\nsignal S : STD_LOGIC_VECTOR(2 downto 0);\r\nsignal I : STD_LOGIC_VECTOR(7 downto 0);\r\nsignal Y : STD_LOGIC;\r\nbegin \r\nuut : MUX_SOURCE port map(\r\nS => S,\r\nI => I,\r\nY => Y);\r\nstim : process\r\nbegin\r\nI(0) <= '0';\r\nI(1) <= '1';\r\nI(2) <= '0';\r\nI(3) <= '1';\r\nI(4) <= '0';\r\nI(5) <= '1';\r\nI(6) <= '0';\r\nI(7) <= '1';\r\nS <= \"000\";wait for 10 ns;\r\nS <= \"001\";wait for 10 ns;\r\nS <= \"010\";wait for 10 ns;\r\nS <= \"011\";wait for 10 ns;\r\nS <= \"100\";wait for 10 ns;\r\nS <= \"101\";wait for 10 ns;\r\nS <= \"110\";wait for 10 ns;\r\nS <= \"111\";wait for 10 ns;\r\nwait;\r\nend process;\r\nend tb;\r\n\r\n2.Code your design here \r\n-- Code your design here\r\nlibrary IEEE;\r\nuse IEEE.std_logic_1164.all;\r\nentity MUX_SOURCE is\r\nPort ( S : in  STD_LOGIC_VECTOR (2 downto 0);\r\nI : in  STD_LOGIC_VECTOR (7 downto 0);\r\nY : out STD_LOGIC);\r\nend MUX_SOURCE;\r\narchitecture Behavioral_NDR of MUX_SOURCE is\r\nbegin\r\nprocess (S,I)\r\nbegin\r\nif (S <= \"000\") then\r\nY <= I(0);\r\nelsif (S <= \"001\") then\r\nY <= I(1);\r\nelsif (S <= \"010\") then\r\nY <= I(2);\r\nelsif (S <=\"011\") then\r\nY <= I(3);\r\nelsif (S <=\"100\") then\r\nY <= I(4);\r\nelsif (S <=\"101\") then\r\nY <= I(5);\r\nelsif (S <=\"110\") then\r\nY <= I(6);\r\nelse\r\nY <= I(7);\r\nend if;\r\nend process;\r\nend Behavioral_NDR;`}\r\n\r\npracimg={img4}\r\n/>    \r\n</div>\r\n    )\r\n}\r\n\r\n\r\nfunction StldPrac5() {\r\n    return (\r\n        <div>\r\n            <ProgramTemp\r\n        pracName = \"Practical 5\"\r\n        code = {`\r\n1. Testbench CODE :-\r\n-- Code your testbench here\r\nlibrary IEEE;\r\nuse IEEE.std_logic_1164.all;\r\nentity decoder_tb is\r\nend entity;\r\narchitecture tb of decoder_tb is\r\ncomponent DECODER_SOURCE is\r\nport(\r\nI : in STD_LOGIC_VECTOR(1 downto 0);\r\nY : out STD_LOGIC_VECTOR(3 downto 0)\r\n);\r\nend component;\r\nsignal I : STD_LOGIC_VECTOR(1 downto 0);\r\nsignal Y : STD_LOGIC_VECTOR(3 downto 0);\r\nbegin\r\nuut: DECODER_SOURCE port map(\r\nI=> I,\r\nY=> Y\r\n);\r\nstim:process\r\nbegin\r\nI <=\"00\";\r\nwait for 20 ns;\r\nI<= \"01\";\r\nwait for 20 ns;\r\nI<= \"10\";\r\nwait for 20 ns;\r\nI<= \"11\";\r\nwait for 20 ns;\r\nwait;\r\nend process;\r\nend tb;\r\n2. Design CODE :-\r\n-- Code your design here\r\nlibrary IEEE;\r\nuse IEEE.std_logic_1164.all;\r\nentity DECODER_SOURCE is\r\nport(\r\nI : in STD_LOGIC_VECTOR (1 downto 0);\r\nY : out STD_LOGIC_VECTOR (3 downto 0)\r\n);\r\nend DECODER_SOURCE;\r\narchitecture arc_decoder of DECODER_SOURCE is\r\nbegin\r\nprocess (I)\r\nbegin\r\ncase I is\r\nwhen \"00\" => Y <= \"0001\"; \r\nwhen \"01\" => Y <= \"0010\";\r\nwhen \"10\" => Y <= \"0100\"; \r\nwhen others => Y <= \"1000\";\r\nend case;\r\nend process;\r\nend arc_decoder;`}\r\n\r\npracimg={img5}\r\n/>    \r\n</div>\r\n    )\r\n}\r\n\r\nfunction StldPrac6() {\r\n    return (\r\n        <div>\r\n            <ProgramTemp\r\n        pracName = \"Practical 6\"\r\n        code = {`1. Testbench CODE :-\r\n-- Code your testbench here\r\nlibrary IEEE;\r\nuse IEEE.std_logic_1164.all;\r\nentity PGC_NDR is\r\nend PGC_NDR;\r\narchitecture tb of PGC_NDR is\r\ncomponent Parity_Genrator_Checker is\r\nport(\r\na,b,c: in bit;\r\nopg,epg,epc,opc : out bit\r\n);\r\nend component;\r\nsignal a: bit :='0';\r\nsignal b: bit :='0';\r\nsignal c: bit :='0';\r\nsignal epg: bit;\r\nsignal opg: bit;\r\nsignal epc: bit;\r\nsignal opc: bit;\r\nbegin\r\nuut: Parity_Genrator_Checker port map (\r\na => a, b => b, c => c,\r\nepg => epg, opg => opg, epc => epc, opc => opc \r\n);\r\nstim:process\r\nbegin\r\na <= '0';\r\nb <= '0';\r\nc <= '0';\r\nwait for 10ns;\r\na <= '0';\r\nb <= '0';\r\nb <= '1';\r\nwait for 10ns;\r\na <= '0';\r\nb <= '1';\r\nc <= '0';\r\nwait for 10ns;\r\na <= '0';\r\nb <= '1';\r\nc <= '1';\r\nwait for 10ns;\r\na <= '1';\r\nb <= '0';\r\nc <= '0';\r\nwait for 10ns;\r\na <= '1';\r\nb <= '0';\r\nc <= '1';\r\nwait for 10ns;\r\na <= '1';\r\nb <= '1';\r\nc <= '0';\r\nwait for 10ns;\r\na <= '1';\r\nb <= '1';\r\nc <= '1';\r\nwait for 10ns;\r\nwait;\r\nend process;\r\nend tb;\r\n\r\n2. Design CODE :-\r\n-- Code your design here\r\nlibrary IEEE;\r\nuse IEEE.std_logic_1164.all;\r\nentity Parity_Genrator_Checker is\r\nport (\r\n    a,b,c : in bit;\r\n    epg,opg,epc,opc : out bit\r\n    );\r\nend Parity_Genrator_Checker;\r\narchitecture arc_pgc of Parity_Genrator_Checker is\r\nbegin\r\nepg <= a XOR b XOR c;\r\nopg <= (a XOR b) XNOR c;\r\nepc <= (a XOR b) XNOR c;\r\nopc <= a XOR b XOR c;\r\nend arc_pgc;`}\r\n\r\npracimg={img6}\r\n/>    \r\n</div>\r\n    )\r\n}\r\n\r\n\r\nfunction StldPrac7() {\r\n    return (\r\n        <div>\r\n            <ProgramTemp\r\n        pracName = \"Practical 7\"\r\n        code = {`1. TextBench Code:-\r\n-- Code your testbench here\r\nlibrary IEEE;\r\nuse IEEE.std_logic_1164.all;\r\nentity compartor_NDR is\r\nend entity;\r\narchitecture tb of  compartor_NDR is\r\ncomponent COMPARATOR_SOURCE is\r\nport(\r\n    A : in STD_LOGIC_VECTOR (1 downto 0);\r\n    G,L,E : out STD_LOGIC\r\n    );\r\nend component;\r\nsignal A: STD_LOGIC_VECTOR(1 downto 0);\r\nsignal G,L,E : STD_LOGIC;\r\nbegin \r\nuut: COMPARATOR_SOURCE port map(\r\nA => A,G => G,\r\nL => L,E => E);\r\nstim:process\r\nbegin\r\nA <=\"00\";\r\nwait for 20 ns;\r\nA<= \"01\";\r\nwait for 20 ns;\r\nA<= \"10\";\r\nwait for 20 ns;\r\nA<= \"11\";\r\nwait for 20 ns;\r\nwait;\r\nend process;\r\nend tb;\r\n\r\n2. Design Code:-\r\n-- Code your design here\r\nlibrary IEEE;\r\nuse IEEE.std_logic_1164.all;\r\nentity COMPARATOR_SOURCE is\r\nport(\r\n    A : in STD_LOGIC_VECTOR (1 downto 0);\r\n    G,L,E : out STD_LOGIC\r\n    );\r\nend COMPARATOR_SOURCE;\r\narchitecture arc_comparator of COMPARATOR_SOURCE is\r\nbegin \r\nprocess(A)\r\nbegin\r\nG<='0';\r\nL<='0';\r\nE<='0';\r\nif(A(0) < A(1)) then\r\n    L<='1';\r\nelsif(A(0) > A(1)) then\r\n    G<='1';\r\nelse\r\n    E<='1';\r\nend if;\r\nend process;\r\nend arc_comparator;`}\r\n\r\npracimg={img7}\r\n/>    \r\n</div>\r\n    )\r\n}\r\n\r\n\r\n\r\nfunction StldPrac8() {\r\n    return (\r\n        <div>\r\n            <ProgramTemp\r\n        pracName = \"Practical 8\"\r\n        code = {`1. TextBench Code:-\r\n-- Code your testbench here\r\nlibrary IEEE;\r\nuse IEEE.std_logic_1164.all;\r\nentity NDR_tb is\r\nend NDR_tb;\r\narchitecture tb of NDR_tb is\r\ncomponent binary_to_gray is\r\nport(\r\n    bin : in std_logic_vector(3 downto 0); \r\n    G : out std_logic_vector(3 downto 0)\r\n    );\r\nend component;\r\nsignal bin,G : std_logic_vector(3 downto 0);\r\nbegin \r\nuut: binary_to_gray port map (bin => bin, G => G);\r\nstim:process\r\nbegin\r\nbin <= \"0000\";  wait for 10 ns;\r\nbin <= \"0001\";  wait for 10 ns;\r\nbin <= \"0010\";  wait for 10 ns;\r\nbin <= \"0011\";  wait for 10 ns;\r\nbin <= \"0100\";  wait for 10 ns;\r\nbin <= \"0101\";  wait for 10 ns;\r\nbin <= \"0110\";  wait for 10 ns;\r\nbin <= \"0111\";  wait for 10 ns;\r\nbin <= \"1000\";  wait for 10 ns;\r\nbin <= \"1001\";  wait for 10 ns;\r\nbin <= \"1010\";  wait for 10 ns;\r\nbin <= \"1011\";  wait for 10 ns;\r\nbin <= \"1100\";  wait for 10 ns;\r\nbin <= \"1101\";  wait for 10 ns;\r\nbin <= \"1110\";  wait for 10 ns;\r\nbin <= \"1111\";  wait for 10 ns;     \r\nwait;\r\nend process;\r\nend tb;\r\n\r\n2. Design Code :-\r\n-- Code your design here\r\nlibrary IEEE;\r\nuse IEEE.std_logic_1164.all;\r\nentity binary_to_gray is\r\nport( \r\n    bin : in std_logic_vector(3 downto 0); \r\n    G : out std_logic_vector(3 downto 0) \r\n    );\r\nend binary_to_gray;\r\narchitecture arc_binary_gray of binary_to_gray is\r\nbegin\r\nG(3) <= bin(3);\r\nG(2) <= bin(3) xor bin(2);\r\nG(1) <= bin(2) xor bin(1);\r\nG(0) <= bin(1) xor bin(0);\r\nend arc_binary_gray;`}\r\n\r\npracimg={img8}\r\n/>    \r\n</div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default StldPrac1\r\nexport {StldPrac2, StldPrac3, StldPrac4,StldPrac5,StldPrac6,StldPrac7,StldPrac8} ;","import React from 'react'\r\nimport List from \"../../List\";\r\n\r\nfunction OSlist() {\r\n    return (\r\n        \r\n            <div className=\"main-list row mt-5 container \" >\r\n            <h2>Operating System</h2>\r\n            <hr/>\r\n            \r\n            <List\r\n            prac = \"Practical 1\"\r\n            aim = \"To simulate First Come First Serve scheduling algorithm.\"\r\n            link=\"/my_cse/Sixth/OSlist/OSPrac1\"\r\n             />\r\n\r\n<List\r\n            prac = \"Practical 2\"\r\n            aim = \"To simulate Shortest Job First process scheduling algorithm.\"\r\n            link=\"/my_cse/Sixth/OSlist/OSPrac2\"\r\n             />\r\n\r\n<List\r\n            prac = \"Practical 3\"\r\n            aim = \" To implement Round Robin Based Process scheduling Algorithm.\"\r\n            link=\"/my_cse/Sixth/OSlist/OSPrac3\"\r\n             />\r\n\r\n<List\r\n            prac = \"Practical 4\"\r\n            aim = \"To simulate Bankers algorithm for deadlock avoidance\"\r\n            link=\"/my_cse/Sixth/OSlist/OSPrac4\"\r\n             />\r\n\r\n<List\r\n            prac = \"Practical 5\"\r\n            aim = \" To implement the Sequential allocation, Linked  allocation file allocation strategies\"\r\n            link=\"/my_cse/Sixth/OSlist/OSPrac5\"\r\n             />\r\n\r\n\r\n        \r\n        <List\r\n            prac = \"Practical 6\"\r\n            aim = \"To implement the FIFO, LRU page replacement policies\"\r\n            link=\"/my_cse/Sixth/OSlist/OSPrac6\"\r\n             />\r\n\r\n<List\r\n            prac = \"Practical 7\"\r\n            aim = \"To implement contiguous memory allocation strategies to detect fragmentation\"\r\n            link=\"/my_cse/Sixth/OSlist/OSPrac7\"\r\n             />\r\n\r\n<List\r\n            prac = \"Practical 8\"\r\n            aim = \" To implement FCFS Disk Scheduling algorithm to calculate seek time\"\r\n            link=\"/my_cse/Sixth/OSlist/OSPrac8\"\r\n             />\r\n\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OSlist\r\n","export default __webpack_public_path__ + \"static/media/OS Practical 1.72a4f67f.jpg\";","export default __webpack_public_path__ + \"static/media/OS Practical 2.29b49ee0.jpg\";","export default __webpack_public_path__ + \"static/media/OS Practical 3.160377ee.jpg\";","export default __webpack_public_path__ + \"static/media/OS Practical 4.50ba0767.jpg\";","export default __webpack_public_path__ + \"static/media/OS Practical 5.44b6d03d.jpg\";","export default __webpack_public_path__ + \"static/media/OS Practical 6.366180f3.jpg\";","export default __webpack_public_path__ + \"static/media/OS Practical 7.752a47e1.jpg\";","export default __webpack_public_path__ + \"static/media/OS Practical 8.78ecd07b.jpg\";","import React from \"react\";\r\nimport ProgramTemp from '../../ProgramTemp';\r\n\r\nimport img1 from \"../images6th/OS Practical 1.jpg\";\r\nimport img2 from \"../images6th/OS Practical 2.jpg\";\r\nimport img3 from \"../images6th/OS Practical 3.jpg\";\r\nimport img4 from \"../images6th/OS Practical 4.jpg\";\r\nimport img5 from \"../images6th/OS Practical 5.jpg\";\r\nimport img6 from \"../images6th/OS Practical 6.jpg\";\r\nimport img7 from \"../images6th/OS Practical 7.jpg\";\r\nimport img8 from \"../images6th/OS Practical 8.jpg\";\r\n\r\n\r\n\r\nfunction OsPrac1(){\r\n    return(\r\n        <>\r\n <ProgramTemp\r\n        pracName = \"Practical 1\"\r\n        code = {`#include&lt;bits/stdc++.h>\r\nusing namespace std;\r\nint main()\r\n{\r\n    char pro[10][10],t[10];\r\n    int arr[10],burst[10],start[10],end[10],tat[10],wt[10],rt[10],i,j,n,temp;\r\n    int tot_wt=0,tot_tat=0,resp=0,tot_resp=0;\r\n\r\n    cout<<\"Enter a no of process : \";\r\n    cin>>n;\r\n\r\n    for(int i=0;i&lt;n;i++) {\r\n        cout<<\"Enter the Process Name, Arrival Time, Brust Time : \";\r\n        cin>>pro[i]; cin>>arr[i]; cin>>burst[i];\r\n    }\t\r\n\r\n    for(int i=0;i&lt;n;i++) {\r\n        for(int j=0;j&lt;n;j++) {\r\n            if(arr[i]&lt;arr[j]){\r\n                // 1. arrange a process with respective arrival time\r\n                temp = arr[i];\r\n                arr[i] = arr[j];\r\n                arr[j] = temp;\r\n\r\n                // 2. arrange a process with respective brust time\r\n                temp = burst[i];\r\n                burst[i] = burst[j];\r\n                burst[j] = temp;\r\n\r\n                // 3. arrange a process with respective process name\r\n                strcpy(t,pro[i]);\r\n                strcpy(pro[i],pro[j]);\r\n                strcpy(pro[j],t);\r\n            }\r\n        }\r\n    }\r\n\r\n    // waiting time for first process will be 0\r\n    wt[0] = 0;\r\n    rt[0] = 0;\r\n\r\n    for(int i=0;i&lt;n;i++) { \r\n        if(i==0) {\r\n        // at time t0 -> is any procee to arrived\r\n            start[i] = arr[i];\r\n            end[i] = burst[i];\r\n            tat[i] = burst[i];\r\n        }\r\n        else{\r\n            // create a procee in squence(Gantt Chart)\r\n            start[i] = end[i-1];\r\n\r\n            // calculating a response time\r\n            resp += burst[i-1];\r\n            rt[i] = resp - arr[i];\r\n        }\r\n        // calculating excution time\r\n        end[i] = start[i] + burst[i];\r\n\r\n        // calculating a trunaround time\r\n        tat[i] = end[i] - arr[i];\r\n\r\n        // calculating a waiting time\r\n        wt[i] = tat[i] - burst[i];\r\n    }\r\n\r\n    cout<<\"\\n\\n*******************************OUTPUT*************************************\";\r\n    cout<<\"\\n\\nGantt Chart : \"<< endl;\r\n    for(int i=0;i&lt;n;i++) {\r\n        cout<&lt;pro[i]<<\" \";\r\n    }\r\n\r\n    cout<<\"\\n\\nPName ArrTime BrustTime Start  END   WaitTime  TAT \\tRT\"<< endl;\r\n    for(int i=0;i&lt;n;i++) {\r\n        cout<&lt;pro[i]<&lt;\"\\t\"<&lt;arr[i]<&lt;\"\\t\"<&lt;burst[i]<&lt;\" \\t\"<&lt;start[i]<<\"  \\t\"<&lt;end[i]<&lt;\"\\t\"<&lt;wt[i]<<\"\\t\"<&lt;tat[i]<&lt;\"\\t\"<&lt;rt[i]<&lt;endl;\r\n        tot_wt += wt[i];\r\n        tot_tat += tat[i];\r\n        tot_resp += rt[i];\r\n    }\r\n\r\n    cout<<\"\\n\\n*******************************AVG TIMING**********************************\";\r\n    cout<<\"\\n\\nAverage Waiting time : \"<<(float)tot_wt/n<< endl;\r\n    cout<<\"Average Turnaround Time : \"<<(float)tot_tat/n<< endl;\r\n    cout<<\"Average Response Time : \"<<(float)tot_resp/n;\r\n    return 0;\r\n`}\r\n\r\npracimg={img1}\r\n     />   \r\n        </>\r\n    )\r\n}\r\n    \r\n\r\n\r\n\r\nfunction OsPrac2(){\r\n    return(\r\n        <>\r\n <ProgramTemp\r\n        pracName = \"Practical 2\"\r\n        code = {`#include&lt;bits/stdc++.h>\r\nusing namespace std;\r\n\r\nvoid sortByArrivalTime(int *arr, int n,int *burst,int *pro){\r\nfor(int i=0;i&lt;n;i++){ \r\n    for(int j=0;j&lt;n;j++){ \r\n        if(arr[i]&lt;arr[j] || (arr[i]==arr[j] && pro[i]>pro[j])){ \r\n            SWAP(pro[i],pro[j]); \r\n            SWAP(arr[i],arr[j]); \r\n            SWAP(burst[i],burst[j]); \r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nvoid sortByBrustTime(int *arr, int n,int *burst,int *pro){\r\nint bt=0,min,k=2;\r\nfor(int i=1;i&lt;n;i++){\r\n    bt+=burst[i];\r\n    min=burst[k];\r\n    for(int j=k;j&lt;n;j++){\r\n        if((bt>=arr[j] && burst[j]&LT;min) || (burst[i]==burst[j] && pro[i]>pro[j])){ \r\n            SWAP(arr[k],arr[j]);\r\n            SWAP(burst[k],burst[j]);\r\n            SWAP(pro[k],pro[j]);\r\n        }\r\n    }\r\n    k++;\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\nint pro[10],arr[10],burst[10],start[10],end[10],tat[10],wt[10],rt[10];\r\nint tot_wt=0,tot_tat=0,resp=0,tot_resp=0;\r\n\r\ncout<<\"Enter a no of process : \";\r\ncin>>n;\r\n\r\nfor(int i=0;i&lt;n;i++) {\r\n    cout<<\"Enter the Process Name, Arrival Time, Brust Time : \";\r\n    cin>>pro[i]; cin>>arr[i]; cin>>burst[i];\r\n}\t\r\n\r\nsortByArrivalTime(arr,n,burst,pro); \r\n\r\nsortByBrustTime(arr,n,burst,pro);    \r\n\r\n// waiting time for first process will be 0\r\nwt[0] = 0;\r\nrt[0] = 0;\r\nfor(int i=0;i&lt;n;i++) { \r\n    if(i==0) {\r\n    // at time t0 -> is any procee to arrived\r\n        start[i] = arr[i];\r\n        end[i] = burst[i];\r\n        tat[i] = burst[i];\r\n    }\r\n    else{\r\n        // create a procee in squence(Gantt Chart)\r\n        start[i] = end[i-1];\r\n\r\n        // calculating a response time\r\n        resp += burst[i-1];\r\n        rt[i] = resp - arr[i];\r\n    }\r\n    // calculating excution time\r\n    end[i] = start[i] + burst[i];\r\n\r\n    // calculating a trunaround time\r\n    tat[i] = end[i] - arr[i];\r\n\r\n    // calculating a waiting time\r\n    wt[i] = tat[i] - burst[i];\r\n}\r\n\r\ncout<<\"\\n\\n*******************************OUTPUT*************************************\";\r\ncout<<\"\\n\\nGantt Chart : \"<< endl;\r\nfor(int i=0;i&lt;n;i++) {\r\n    cout<&lt;\"P\"<&lt;pro[i];\r\n        if(i == n-1){\r\n    continue;\r\n        }\r\n    cout<<\" -> \";\r\n}\r\n\r\ncout<<\"\\n\\nPName ArrTime BrustTime Start  END   WaitTime  TAT \\tRT\"<< endl;\r\nfor(int i=0;i&lt;n;i++) {\r\n    cout<&lt;pro[i]<&lt;\"\\t\"<&lt;arr[i]<&lt;\"\\t\"<&lt;burst[i]<&lt;\" \\t\"<&lt;start[i]<<\"  \\t\"<&lt;end[i]<&lt;\"\\t\"<&lt;wt[i]<<\"\\t\"<&lt;tat[i]<&lt;\"\\t\"<&lt;rt[i]<&lt;endl;\r\n    tot_wt += wt[i];\r\n    tot_tat += tat[i];\r\n    tot_resp += rt[i];\r\n}\r\n\r\ncout<<\"\\n\\n*******************************AVG TIMING**********************************\";\r\ncout<<\"\\n\\nAverage Waiting time : \"<<(float)tot_wt/n<< endl;\r\ncout<<\"Average Turnaround Time : \"<<(float)tot_tat/n<< endl;\r\ncout<<\"Average Response Time : \"<<(float)tot_resp/n;\r\nreturn 0;`}\r\n\r\npracimg={img2}\r\n       />\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nfunction OsPrac3(){\r\n    return(\r\n        <>\r\n <ProgramTemp\r\n        pracName = \"Practical 3\"\r\n        code = {`#include&lt;bits/stdc++.h>\r\nusing namespace std;\r\n\r\nvoid sortProcess(int *arr, int n,int *burst,int *pro,int *wt,int *tat){\r\nfor(int i=0;i&lt;n;i++){ \r\n    for(int j=0;j&lt;n;j++){\r\n        if(pro[i]&lt;pro[j]{\r\n            SWAP(pro[i],pro[j]);\r\n            SWAP(arr[i],arr[j]);\r\n            SWAP(burst[i],burst[j])\r\n            SWAP(wt[i],wt[j])\r\n            SWAP(tat[i],tat[j])\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nvoid sortByArrivalTime(int *arr, int n,int *burst,int *pro, int *rt){\r\nfor(int i=0;i&lt;n;i++){\r\n    for(int j=0;j&lt;n;j++){\r\n        if(arr[i]&lt;arr[j] || (arr[i]==arr[j] && pro[i]&lt;pro[j])){ \r\n            SWAP(arr[i],arr[j]);\r\n            SWAP(burst[i],burst[j]);\r\n            SWAP(pro[i],pro[j]);\r\n            SWAP(rt[i],rt[j]);\r\n        }\r\n    }\r\n    }\r\n}\r\n\r\nint check(int n, int *rt){\r\nint t = 0;\r\nfor(int i=0;i&lt;n;i++){\r\n    if(rt[i]==0){\r\n        t=0;\r\n    }\r\n    else{\r\n        t=1;\r\n    }\r\n}\r\nreturn t;\r\n}\r\n\r\nint main()\r\n{\r\nint pro[10],arr[10],burst[10],tat[10],wt[10],rt[10];\r\nint tot_wt=0,tot_tat=0,time,n,k,time_quant;\r\n\r\ncout<<\"Enter a no of process : \";\r\ncin>>n;\r\n\r\nfor(int i=0;i&lt;n;i++) {\r\n    cout<<\"Enter the Process Name, Arrival Time, Brust Time : \";\r\n    cin>>pro[i]; cin>>arr[i]; cin>>burst[i];\r\n}\t\r\n\r\ncout<<\"\\nEnter the time quantum : \";\r\ncin>>time_quant;\r\n   \r\nsortByBrustTime(arr,n,burst,pro,rt);    \r\n\r\n//set counter to start\r\nk=0;\r\n\t\r\n//set time with first arrival process\r\ntime=arr[k];\r\n\t\r\ncout<<\"\\n\\n*******************************OUTPUT*************************************\";\r\ncout<<\"\\nGantt Chart : \"&lt;&lt;endl;\r\nwhile(check(n,rt)){    \r\n    //check whether porcess is satify time quantum or not\r\n    if(rt[k]&lt;=time_quant && rt[k]!=0){\r\n        time += rt[k];\r\n        rt[k]=0;\r\n        tat[k] = time-arr[k];\r\n        wt[k] = tat[k]-burst[k];\r\n        cout&lt;&lt;pro[k];\r\n        if(check(n,rt)){\r\n            cout<<\" -> \";\r\n        }\r\n    }\r\n    // continue process having burst time more time quantum\r\n    else if(rt[k]>time_quant){\r\n        rt[k] -= time_quant;\r\n        time += time_quant;\r\n        cout&lt;&lt;pro[k];\r\n        if(check(n,rt)){\r\n            cout<<\" -> \";\r\n        }\r\n    }\r\n    // moving toward start of a ready queue\r\n    if(k==n-1){\r\n        k=0;\r\n    }\r\n    // peeking next process from ready queue \r\n    else if(arr[k+1]<=time){\r\n        k++;\r\n    }\r\n    // moving toward starts of a ready queue\r\n    else{\r\n        k=0;\r\n    }\r\n}\r\n    \r\nsortProcess(arr,n,burst,pro,wt,tat);\r\n    \r\ncout<<\"\\n\\nPName ArrTime BrustTime WaitTime  TAT \"&lt;&lt;endl;\r\nfor(int i=0;i&lt;n;i++) {\r\n    cout<&lt;pro[i]<&lt;\"\\t\"<&lt;arr[i]<&lt;\"\\t\"<&lt;burst[i]<&lt;\" \\t\"<&lt;wt[i]<<\"\\t   \"<&lt;tat[i]<&lt;endl;\r\n    tot_wt += wt[i];\r\n    tot_tat += tat[i];\r\n}\r\n\r\ncout<<\"\\n\\n*******************************AVG TIMING**********************************\";\r\ncout<<\"\\n\\nAverage Waiting time : \"<<(float)tot_wt/n<< endl;\r\ncout<<\"Average Turnaround Time : \"<<(float)tot_tat/n<< endl;\r\nreturn 0;`}\r\n\r\npracimg={img3}\r\n       />\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nfunction OsPrac4(){\r\n    return(\r\n        <>\r\n <ProgramTemp\r\n        pracName = \"Practical 4\"\r\n        code = {`#include&lt;bits/stdc++.h>\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\nint n=5,m=3;\r\nint alloc[n][m] = { {0,1,0}, {2,0,0}, {3,0,2}, {2,1,1}, {0,0,2} };\r\nint max[n][m] = { {7,5,3}, {3,2,2}, {9,0,2}, {2,2,2}, {4,3,2} };\r\nint avail[m] = {3,3,2};\r\nint need[n][m];\r\nint safe[n],done[n]={1,1,1,1,1};\r\nint flag=0,count=0;\r\n\r\nfor(int i=0;i&lt;n;i++){\t\r\n    for(int j=0;j&lt;m;j++){\r\n        need[i][j] = max[i][j] - alloc[i][j];\r\n    }\r\n}\r\n\r\ncout<<\"\\n Banker's Algorithm :-\\n\\n\";\r\ncout<<\"\\tGiven Process Table -\\n\";\r\ncout<<\"\\t\\tProcess  Allocation    Max \\tNeed\\n\\t\\t  \";\r\nfor(int i=0;i&lt;n;i++){\r\n    cout<&lt;\"P\"&lt;&lt;i&lt;&lt;\"\\t   \";\r\n    for(int j=0;j&lt;m;j++){\r\n        cout&lt;&lt;alloc[i][j]<<\" \";\r\n    }\r\n    cout<<\"     \";\r\n    for(int j=0;j&lt;m;j++){\r\n        cout&lt;&lt;max[i][j]<<\" \";\r\n    }\r\n    cout<<\"   \";\r\n    for(int j=0;j&lt;m;j++){\r\n        cout&lt;&lt;need[i][j]<<\" \";\r\n    }\r\n    cout<<\"\\n\\t\\t  \";\r\n}\r\n    \r\ncout<<\"\\n\\tExecution Process Table -\";\r\ncout<<\"\\n\\t\\tStep  Process  Avail-Resources\";\r\nfor(int i=0;i&lt;&lt;n;i++){\r\n    for(int j=0;j&lt;n;j++){\r\n        if(done[j]){\r\n            flag=0;\r\n            for(int k=0;k&lt;m;k++){\r\n                if(need[j][k]>avail[k]){\r\n                    flag=1;\r\n                    break;\r\n                }\r\n            }\r\n            if(!flag){\r\n                cout&lt;&lt;\"\\n\\t\\t  \"&lt;&lt;count+1<<\"\\tP\"&lt;&lt;j<<\"\\t  \";\r\n                safe[count++] = j;\r\n                for(int k=0;k&lt;m;k++){\r\n                    cout&lt;&lt;avail[k]<<\" \";\r\n                    avail[k] += alloc[j][k];\r\n                }\r\n                done[j]=0; \r\n            }\r\n        }\r\n    }\r\n}\r\n\r\ncout<<\"\\n\\n\\tSafe Sequence Execution - \\n\\t\\t\";\r\nfor(int i=0;i&lt;n;i++){\r\n    cout\"P\"&lt;&lt;safe[i];\r\n    if(i==n-1)\r\n        continue;\r\n    cout&lt;&lt;\" -> \";\r\n}\r\n\r\nreturn 0;`}\r\n\r\npracimg={img4}\r\n       />\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nfunction OsPrac5(){\r\n    return(\r\n        <>\r\n <ProgramTemp\r\n        pracName = \"Practical 5\"\r\n        code = {`#include&lt;bits/stdc++.h>\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cout<<\"Enter the no of Files :: \";\r\n    cin>>n;\r\n    int st[n],len[n];\r\n    char file[n];\r\n    for(int i=0;i&lt;n;i++){\r\n        cout<<\"Enter the File Name, Starting block and Length :: File \";\r\n        cin>>file[i]>>st[i]>>len[i];\r\n    }\t\r\n    cout<<\"\\n\\tSequential Allocation : \"<&lt;endl;\r\n    for(int i=0;i&lt;n;i++){\r\n        cout<<\"\\t\\tFile \"<&lt;file[i]<<\" : \";\r\n        int size=st[i]+len[i];\r\n        for(int k=st[i];k&lt;size;k++){\r\n        cout<<k<<\" \";\r\n    }\r\n    cout<&lt;endl;\r\n    }\r\n    return 0;\r\n}\r\n</code></pre>\r\n            </div>\r\n            <h6>2. Linked Allocation</h6>\r\n            <div class=\"code-me\">\r\n                <pre>\r\n<code class=\"language-cpp\">\r\n#include&lt;bits/stdc++.h>\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n int n;\r\n cout<<\"Enter the no of Files :: \";\r\n cin>>n;\r\n int st[n],len[n];\r\n char file[n];\r\n for(int i=0;i&lt;n;i++){\r\n     cout<<\"Enter the File Name, Starting block and Length :: File \";\r\n     cin>>file[i]>>st[i]>>len[i];\r\n }\t\r\n cout<<\"\\n\\tLinked Allocation : \"<&lt;endl;\r\n for(int i=0;i&lt;n;i++){\r\n     cout<<\"\\t\\tFile \"<&lt;file[i]<<\" : \";\r\n     int size=st[i]+len[i];\r\n     for(int k=st[i];k&lt;size;k++){\r\n     cout<&lt;k<<\" \";\r\n     \tif(k==size-1){\r\n          continue;\r\n    }\r\n    cout<<\" -> \";\r\n }\r\n cout<&lt;endl;\r\n }\r\n return 0;`}\r\n\r\npracimg={img5}\r\n       />\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nfunction OsPrac6(){\r\n    return(\r\n        <>\r\n <ProgramTemp\r\n        pracName = \"Practical 6\"\r\n        code = {`#include&lt;bits/stdc++.h>\r\nusing namespace std;\r\n\r\n// Required Variables\r\nint n,nf;\r\nint page[50],temp[50];\r\nint hit=0;\r\nint fcnt=0;\r\n\r\n// init page frame\r\nvoid createPageFrame(){\r\n    fcnt=0;\r\n    for(int i=0;i&lt;nf;i++)\r\n        temp[i]=-1;\r\n  }\r\n\r\n// check weather frame is present or not\r\nint isPageHit(int x){\r\n    hit=0;\r\n    for(int k=0;k<nf;k++){\r\n        if(temp[k]==x){\r\n            hit=1;\r\n            break;\r\n        }\r\n    }\r\n    return hit;\r\n  }\r\n\r\n// display fream page\r\nvoid displayPage(){\r\n    for(int i=0;i&lt;nf;i++){\r\n    if(temp[i]!=-1)\r\n        cout<&lt;temp[i]<<\" \";\r\n    }\r\n  }\r\n\r\n// dispalay no of page fault count\r\nvoid displayPageFaultCount(){\r\n    cout<<\"\\n\\n\\t\\t -----> Page Fault Count : \"<&lt;fcnt;\r\n  }\r\n\r\nvoid FIFO(){\r\n    // init page frame (function call)\r\n    createPageFrame();\r\n    \r\n    for(int i=0;i&lt;n;i++) {\r\n        int k;\r\n        cout<<\"\\n\\t\\tFor Page \"<&lt;page[i]<<\" : \";\r\n        \r\n        // check for page already available or not\r\n        if(isPageHit(page[i])==0){\r\n            // create palce for new page frame\r\n            for(k=0;k&lt;nf-1;k++){\r\n                temp[k]=temp[k+1];\r\n              }\r\n            // set a page into frame\r\n            temp[k]=page[i];\r\n            // increment page count\r\n            fcnt++;\r\n            // display current page frame (function call)\r\n            displayPage();\r\n          }\r\n        // else -> page already in frame\r\n        else{\r\n            cout<<\"No Page fault !!!\";\r\n          }\r\n      }\r\n    // display page fault count (function call)\r\n    displayPageFaultCount();\r\n  }\r\n\r\nvoid LRU(){\r\n    // init page frame (function call)\r\n    createPageFrame();\r\n    int least[50];\r\n    \r\n    for(int i=0;i&lt;n;i++){\r\n        cout<<\"\\n\\t\\tFor Page \"<&lt;page[i]<<\" : \";\r\n        // check for page already available or not\r\n        if(isPageHit(page[i])==0){\r\n            for(int j=0;j&lt;nf;j++){\r\n                int pg=temp[j];\r\n                int flag=0;\r\n                // check for least page\r\n                for(int k=i-1;k>=0;k--){\r\n                        if(pg==page[k]){\r\n                            least[j]=k;\r\n                            flag=1;\r\n                            break;\r\n                          }\r\n                        else\r\n                            flag=0;\r\n                  }\r\n                if(!flag)\r\n                    least[j]=-1;\r\n              }\r\n            int min=0;\r\n            int index;\r\n            // check with minimume page fream\r\n            for(int j=0;j&lt;nf;j++){\r\n                if(least[j]&lt;min){\r\n                    min=least[j];\r\n                    index=j;\r\n                  }\r\n              }\r\n            // adding page into frame\r\n            temp[index] = page[i];\r\n            // increment page count\r\n            fcnt++;\r\n            // display current page frame (function call)\r\n            displayPage();\r\n          }\r\n        \r\n        // else -> page already in frame\r\n        else{\r\n            cout<<\"No Page fault !!!\";\r\n          }\r\n    }\r\n    // display page fault count (function call)\r\n    displayPageFaultCount();\r\n  }\r\n\r\nint main()\r\n{\r\n    cout<<\"Enter the lenght of page stream :: \";\r\n    cin>>n;\r\n    cout<<\"\\nEnter the reference stream :: \";\r\n    for(int i=0;i&lt;n;i++)\r\n       cin>>page[i];\r\n    cout<<\"\\nEnter the no frames :: \";\r\n    cin>>nf;\r\n\t\r\n    cout<<\"\\n\\n\\tFIFO Page Replacement Algorithm\"<&lt;endl;\r\n    FIFO();\r\n\t\r\n    cout<<\"\\n\\n\\tLRU Page Replacement Algorithm\"<&lt;endl;\r\n    LRU();\r\n\r\n    return 0;`}\r\n\r\npracimg={img6}\r\n       />\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nfunction OsPrac7(){\r\n    return(\r\n        <>\r\n <ProgramTemp\r\n        pracName = \"Practical 7\"\r\n        code = {`#include&lt;bits/stdc++.h>\r\nusing namespace std;\r\n\r\nint nf,nb,bs[max],fs[max];\r\nint alloc_block_no[max];\r\nint temp[max],frag[max];\r\n\r\nvoid init(){\r\n    memset(alloc_block_no,-1,sizeof(alloc_block_no));\r\n    memset(frag,-1,sizeof(frag));\r\n    memcpy(temp,bs,sizeof(bs));\r\n}\r\n\r\nvoid display(){\r\n    cout<<\"\\t\\tFile_No: File_Size: Block_No: Block_Size: Fragment:\"<<endl;\r\n    for(int i=0;i&lt;nf;i++){\r\n        cout<<\"\\t\\t   \"<&lt;i+1<<\"\\t   \"&lt;&lt;fs[i]&lt;&lt;\"\\t\\t\";\r\n        if(alloc_block_no[i]==-1)\r\n            cout<<\"l-1\"<<\"\\t  \"<<\"-1\"<<\"\\t    \"<<\"-1\"<&lt;endl;\r\n        else\r\n            cout<&lt;alloc_block_no[i]+1<<\"\\t  \"<&lt;bs[alloc_block_no[i]]<<\"\\t    \"<&lt;frag[i]<&lt;endl;\r\n    }\r\n}\r\n\r\nvoid fisrtFit(){\r\n    init();\r\n    for(int i=0;i&lt;nf;i++){\r\n        for(int j=0;j&lt;nb;j++){\r\n            if(fs[i]<=temp[j]){\r\n                alloc_block_no[i] = j;\r\n                temp[j] -= fs[i];\r\n                frag[i] = temp[j];\r\n                break;\t\r\n            }\r\n        }\t\r\n    }\r\n    display();\r\n}\r\n\r\nvoid bestFit(){\r\n    init();\r\n    for(int i=0;i<nf;i++){\r\n        int f=-1;\r\n        for(int j=0;j<nb;j++){\r\n            if(temp[j]>=fs[i]){\r\n                if(f==-1)\r\n                    f = j;\r\n                if(temp[f]>temp[j])\r\n                    f = j;\r\n            }\r\n        }\r\n        if(f != -1){\r\n            alloc_block_no[i] = f;\r\n            temp[f] -= fs[i];\r\n            frag[i] = temp[f];\r\n        }\r\n    }\r\n    display();\r\n}\r\n\r\nvoid worstFit(){\r\n    init();\r\n    for(int i=0;i&lt;nf;i++){\r\n        int f=-1;\r\n        for(int j=0;j&lt;nb;j++){\r\n            if(temp[j]>=fs[i]){\r\n                if(f==-1)\r\n                    f = j;\r\n                if(temp[f]<temp[j])\r\n                    f = j;\r\n            }\r\n        }\t\r\n        if(f!=-1){\r\n            alloc_block_no[i] = f;\r\n            temp[f] -= fs[i];\r\n            frag[i] = temp[f];\r\n        }\r\n    }\r\n    display();\r\n}\r\n\r\nint main()\r\n{\r\n    cout<<\"Enter the no of Blocks : \";\r\n    cin>>nb;\r\n\r\n    cout<<\"\\nEnter the size of each block : \"<<endl;\r\n    for(int i=0;i&lt;nb;i++){\r\n    cout<<\"Block \"<&lt;i+1<<\" : \";\r\n    cin>>bs[i];\r\n    }\r\n\r\n    cout<<\"\\nEnter the no files : \";\r\n    cin>>nf;\r\n\r\n    cout<<\"\\nEnter the size of each file : \"<<endl;\r\n    for(int i=0;i&lt;nb;i++){\r\n    cout<<\"File \"<&lt;i+1<<\" : \";\r\n    cin>>fs[i];\r\n    }\r\n\r\n    cout<<\"\\n\\n\\tFirst Fit :\"<&lt;endl;\r\n    fisrtFit();\r\n\r\n    cout<<\"\\n\\n\\tBest Fit :\"<&lt;endl;\r\n    bestFit();\r\n\r\n    cout<<\"\\n\\n\\tWorst Fit :\"<&lt;endl;\r\n    worstFit();\r\n\r\n    return 0;\r\n`}\r\n\r\npracimg={img7}\r\n       />\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nfunction OsPrac8(){\r\n    return(\r\n        <>\r\n <ProgramTemp\r\n        pracName = \"Practical 8\"\r\n        code = {`#include&lt;bits/stdc++.h>\r\nusing namespace std;\r\n\r\nvoid FCFS(vector &lt;int> a,int n, int h){\r\n    int sum=0;\r\n    for(int i=0;i&lt;n;i++){\r\n        cout<&lt;a[i];\r\n        if(i!=n-1){\r\n            cout<<\" -> \";\r\n        }\r\n        sum += abs(a[i]-h);\r\n        h = a[i];\r\n    }\r\n    cout<<\"\\n\\n\\tTotal Seek Time : \"<&lt;sum;\r\n}\r\n\r\nint main()\r\n{\r\n    int m,n,head;\r\n\t\r\n\tcout<<\"Enter the size of disk : \";\r\n\tcin>>m;\r\n\t\r\n\tcout<<\"\\nEnter the no of work queue size : \";\r\n\tcin>>n;\r\n\t\r\n\tvector &lt;int> a(n);\r\n\t\r\n\tcout<<\"\\nEnter the Work Queue : \";\r\n\tfor(int i=0;i&lt;n;i++)\r\n\t\tcin>>a[i];\r\n\t\r\n\tcout<<\"\\nEnter the head position : \";\r\n\tcin>>head;\r\n\t\r\n\tcout<<\"\\n\\n------------------------------------------------------------------\";\r\n\tcout<<\"\\n\\n\\tFCSF Disk Scheduling Algorithm :\\n\\n\\t\\t\";\r\n\tFCFS(a,n,head);\r\n\tcout<<\"\\n\\n------------------------------------------------------------------\";\r\n\r\n    return 0;`}\r\n\r\npracimg={img8}\r\n       />\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default OsPrac1;\r\n\r\nexport {OsPrac1, OsPrac2,OsPrac3,OsPrac4,OsPrac5,OsPrac6,OsPrac7,OsPrac8};","import React from 'react'\r\nimport List from \"../../List\";\r\n\r\nfunction DBMSlist() {\r\n    return (\r\n        <div className=\"main-list row mt-5 container \" >\r\n            <h2>Database Management System</h2>\r\n            <hr/>\r\n            \r\n            <List\r\n            prac = \"Practical 1\"\r\n            aim = \" Introduction to Database System, Structured Query Language (SQL) and installation procedure of MySQL on Ubuntu.\"\r\n            link=\"/my_cse/Sixth/DBMSList/DBMSPrac1\"\r\n             />\r\n\r\n<List\r\n            prac = \"Practical 2\"\r\n            aim = \" Introduction to Data Definition Language (DDL) commands - CREATE, ALTER, TRUNCATE, DROP, RENAME.\"\r\n            link=\"/my_cse/Sixth/DBMSlist/DBMSPrac2\"\r\n             />\r\n\r\n<List\r\n            prac = \"Practical 3\"\r\n            aim = \" To Study & Implementation of Data Manipulation Language queries: Use DML statement to edit data or delete data in tables and apply simple and advanced constraints on the table.\"\r\n            link=\"/my_cse/Sixth/DBMSlist/DBMSPrac3\"\r\n             />\r\n\r\n<List\r\n            prac = \"Practical 4\"\r\n            aim = \" Perform the operations based on select command using where, group by, order by and having clause to retrieve data from database.\"\r\n            link=\"/my_cse/Sixth/DBMSlist/DBMSPrac4\"\r\n             />\r\n\r\n<List\r\n            prac = \"Practical 5\"\r\n            aim = \" Perform queries using arithmetic, comparison and logical operators.\"\r\n            link=\"/my_cse/Sixth/DBMSlist/DBMSPrac5\"\r\n             />\r\n\r\n\r\n        \r\n        <List\r\n            prac = \"Practical 6\"\r\n            aim = \"Perform Operation based on String,numeric and aggregate function on EMPLOYEE table for finding different records.\"\r\n            link=\"/my_cse/Sixth/DBMSlist/DBMSPrac6\"\r\n             />\r\n\r\n<List\r\n            prac = \"Practical 7\"\r\n            aim = \" Perform different types Join Operations on Order and Customer table.\"\r\n            link=\"/my_cse/Sixth/DBMSlist/DBMSPrac7\"\r\n             />\r\n\r\n<List\r\n            prac = \"Practical 8\"\r\n            aim = \"Perform different transaction opration(Commmit, Rollback and Savepoint)\"\r\n            link=\"/my_cse/Sixth/DBMSlist/DBMSPrac8\"\r\n             />\r\n\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DBMSlist\r\n","export default __webpack_public_path__ + \"static/media/DBMS Practical 2.45aa57cc.jpg\";","export default __webpack_public_path__ + \"static/media/DBMS Practical 3.f0eb994c.jpg\";","export default __webpack_public_path__ + \"static/media/DBMS Practical 4.be6d582a.jpg\";","export default __webpack_public_path__ + \"static/media/DBMS Practical 5.5af7b48b.jpg\";","export default __webpack_public_path__ + \"static/media/DBMS Practical 6.bee707cf.jpg\";","export default __webpack_public_path__ + \"static/media/DBMS Practical 7.272079f6.jpg\";","export default __webpack_public_path__ + \"static/media/DBMS Practical 8.2ceef55d.jpg\";","import React from 'react'\r\nimport ProgramTemp from '../../ProgramTemp';\r\n// style in sem.css\r\n\r\nimport img2 from \"../images6th/DBMS Practical 2.jpg\";\r\nimport img3 from \"../images6th/DBMS Practical 3.jpg\";\r\nimport img4 from \"../images6th/DBMS Practical 4.jpg\";\r\nimport img5 from \"../images6th/DBMS Practical 5.jpg\";\r\nimport img6 from \"../images6th/DBMS Practical 6.jpg\";\r\nimport img7 from \"../images6th/DBMS Practical 7.jpg\";\r\nimport img8 from \"../images6th/DBMS Practical 8.jpg\";\r\n\r\n\r\nfunction DBMSPrac1() {\r\n    return (\r\n        <>\r\n        <h2 className=\"container mt-5 mb-2 mx-auto\">Practical 1</h2>\r\n        <hr/>\r\n        <div className=\"container\">\r\n        <p><b>Note : Watch this video for installation of MySQL</b></p>\r\n        <iframe className=\"my-4 yt\"  src=\"https://www.youtube.com/embed/GIRcpjg-3Eg\" title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n        </div> \r\n        \r\n         </>\r\n    )\r\n}\r\n\r\n\r\nfunction DBMSPrac2() {\r\n    return (\r\n        <>\r\n        <ProgramTemp\r\n               pracName = \"Practical 2\"\r\ncode ={` mysql> CREATE DATABASE Practical2;\r\nmysql> USE Practical2;\r\nmysql> CREATE TABLE EMPLOYEE(EMPNO INT, DEPTNO INT, EMPNAME VARCHAR(20), JOIN_DATE INT, AGE INT, DESIGNATION VARCHAR(20),SALARY INT, GENDER VARCHAR(5), CITY VARCHAR(20), DISTRICT VARCHAR(20), COUNTRY VARCHAR(20));\r\n                            \r\n                            \r\nmysql> ALTER TABLE EMPLOYEE\r\n-> ADD DEPT_NAME VARCHAR(20);\r\n                            \r\n                            \r\nmysql> ALTER TABLE EMPLOYEE\r\n-> MODIFY EMPNO EMPLOYEENUM INT;\r\n                            \r\nmysql> RENAME TABLE EMPLOYEE TO EMPDATA;\r\n                            \r\nmysql> TRUNCATE TABLE EMPDATA;\r\nmysql> DROP TABLE EMPDATA;`}\r\n       \r\n       pracimg={img2}\r\n            />   \r\n               </>\r\n    )\r\n}\r\n\r\n\r\n\r\nfunction DBMSPrac3() {\r\n    return (\r\n        <>\r\n        <ProgramTemp\r\n               pracName = \"Practical 3\"\r\n               code ={`mysql> CREATE DATABASE Practical3;\r\nmysql> USE Practical3;\r\nmysql> CREATE TABLE EMPLOYEE(EMPNO INT, FNAME VARCHAR(20), LNAME VARCHAR(20), DEPTNO INT, AGE INT, DESIGNATION VARCHAR(20));\r\n\r\nmysql> INSERT INTO EMPLOYEE VALUES (1,'James','Smith',1,35,'CEO'),(2,'Maria','Garica',3,33,'CEO'),(3,'Maria','Martinez',2,30,'CAO'),(4,'Thomas','Lee',4,27,'CEO'),(5,'John','Martinez',3,25,'CAO');\r\n\r\n>mysql> UPDATE EMPLOYEE SET LNAME='LEE' WHERE EMPNO=8;\r\n\r\nmysql> DELETE FROM EMPLOYEE WHERE EMPNO=9;`}\r\n       \r\n       pracimg={img3}\r\n            />   \r\n               </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nfunction DBMSPrac4() {\r\n    return (\r\n        <>\r\n        <ProgramTemp\r\n               pracName = \"Practical 4\"\r\n               code ={`mysql> CREATE DATABASE Practical4;\r\nmysql>  USE Practical4;\r\nmysql> CREATE TABLE EMPLOYEE(EmpNo INT, EName VARCHAR(10), DeptNo INT, Age INT, Desgination VARCHAR(10),JDate DATE, Salary INT, Gender CHAR(2), City VARCHAR(10), District VARCHAR(10), Country VARCHAR(10));\r\nmysql> INSERT INTO EMPLOYEE VALUES\r\n   -> (101,'Rajesh',1,35,'Manager','2017-08-11',50000,'M','AMT','MH','IND'),\r\n   -> (102,'Sanket',2,30,'Clerk','2011-09-05',5000,'M','NGP','MH','IND'),\r\n   -> (103,'Leena',4,29,'Sale','2020-05-20',11000,'F','PUNE','MH','IND'),\r\n   -> (104,'Reeta',3,30,'Production','2019-02-25',30000,'F','Mumbai','MP','IND'),\r\n   -> (105,'Raj',2,38,'Management','2010-05-22',10000,'M','Akola','UP','IND'),\r\n   -> (106,'Sandeep',3,35,'Manager','2017-06-22',50000,'M','AMT','MH','IND'),\r\n   -> (107,'Yash',1,33,'Clerk','2019-06-03',6000,'M','NGP','ML','IND');\r\n   \r\n   mysql>SELECT Desgination,MIN(Salary),MAX(Salary),AVG(Salary),SUM(Salary) FROM EMPLOYEE GROUP BY Desgination;\r\n   \r\n   mysql> SELECT DeptNo,SUM(Salary) FROM EMPLOYEE GROUP BY DeptNo HAVING SUM(Salary)>60000;\r\n   \r\n   mysql> SELECT COUNT(*) FROM EMPLOYEE;\r\n   \r\n   mysql> SELECT DeptNo,AVG(Salary)  FROM EMPLOYEE GROUP BY DeptNo HAVING AVG(Salary) BETWEEN 5000 and 10000 ORDER BY DeptNo DESC;\r\n   \r\n   mysql> SELECT Age,COUNT(*) \"Same Age Count\" FROM EMPLOYEE GROUP BY Age;\r\n   \r\n   mysql> SELECT EmpNo,EName,Desgination FROM EMPLOYEE WHERE JDate<'2013-01-01' ORDER BY JDate DESC;\r\n   \r\n   mysql> SELECT City,COUNT(*)\"City Count\" FROM EMPLOYEE GROUP BY City;`}\r\n       \r\n       pracimg={img4}\r\n            />   \r\n               </>\r\n    )\r\n}\r\n\r\n\r\n\r\nfunction DBMSPrac5() {\r\n    return (\r\n        <>\r\n        <ProgramTemp\r\n               pracName = \"Practical 5\"\r\n               code ={`CREATE DATABASE Practical5;\r\nmysql>  USE Practical5;\r\nmysql> CREATE TABLE EMPLOYEE(EmpNo INT, EName VARCHAR(10), DeptNo INT, Age INT, Desgination VARCHAR(10),JDate DATE, Salary INT, Gender CHAR(2), City VARCHAR(10), District VARCHAR(10), Country VARCHAR(10));\r\nmysql> INSERT INTO EMPLOYEE VALUES\r\n   -> (101,'Rajesh',1,48,'Manager','2017-08-11',50000,'M','AMT','MH','IND'),\r\n   -> (102,'Abhi',2,30,'Clerk','2011-09-05',15000,'M','PUNE','MH','IND'),\r\n   -> (103,'Leena',4,29,'Sale','2020-05-20',15000,'F','NGP','MH','IND'),\r\n   -> (104,'Reeta',3,30,'Production','2019-02-25',30000,'F','MUMBAI','MP','IND'),\r\n   -> (105,'Raj',2,38,'Management','2010-05-22',10000,'M','AKOLA','UP','IND'),\r\n   -> (106,'Sandeep',3,35,'Manager','2017-06-22',28000,'M','PUNE','MH','IND'),\r\n   -> (107,'Anuj',1,33,'Clerk','2019-06-03',11000,'M','NGP','ML','IND'),\r\n   -> (108,'Dhiraj',3,30,'Worker','2016-04-13',5000,'M','NGP','ML','IND'),\r\n   -> (109,'Anuja',2,33,'Sale','2020-03-28',4000,'F','THANE','UP','IND'),\r\n   -> (110,'Vikram',1,null,'Managemnet','2019-10-10',15000,'M','AMT','MH','IND');\r\n   \r\n   mysql> SELECT EmpNO,EName,Desgination,Salary,(Salary+Salary*0.2) AS 'INC Salary' FROM EMPLOYEE WHERE Salary>10000 AND Desgination='Clerk';\r\n   \r\n   mysql> SELECT EName FROM EMPLOYEE WHERE Salary!=4000 AND Salary=10000;\r\n   \r\n   mysql> SELECT * FROM EMPLOYEE WHERE Salary&lt;20000 AND Salary>5000;\r\n   \r\n   mysql> SELECT * FROM EMPLOYEE WHERE Salary<=7000;\r\n   \r\n   mysql> SELECT EmpNO,EName,Desgination,Salary FROM EMPLOYEE WHERE Salary IN(4000,5000,10000);\r\n   \r\n   mysql> SELECT * FROM EMPLOYEE WHERE (Salary!=30000) AND (Salary!=28000);\r\n   \r\n   mysql> SELECT EmpNo,EName,Age,Salary FROM EMPLOYEE WHERE Age BETWEEN 18 AND 40;\r\n   \r\n   mysql> SELECT EmpNo,EName,Age,Salary FROM EMPLOYEE WHERE Salary NOT BETWEEN 15000 AND 30000;\r\n   \r\n   mysql> SELECT * FROM EMPLOYEE WHERE (EName LIKE 'A%') AND (City LIKE '%E');\r\n   \r\n   mysql> SELECT * FROM EMPLOYEE WHERE (EName LIKE 'A%') AND (District NOT LIKE '%RA%');\r\n   \r\n   mysql> SELECT * FROM EMPLOYEE WHERE Age is null;\r\n   \r\n   mysql> SELECT * FROM EMPLOYEE WHERE (Salary>7000) AND (Desgination='Clerk');\r\n   \r\n   mysql> SELECT EName,Desgination,Salary FROM EMPLOYEE WHERE (Salary>10000) OR (Desgination='Clerk');\r\n   \r\n   mysql> SELECT * FROM EMPLOYEE WHERE Salary<9000;\r\n   \r\n   mysql> SELECT EmpNo,EName,Salary,City,Country FROM EMPLOYEE WHERE (City='PUNE' OR City='MUMBAI') AND (Age BETWEEN 25 AND 45);\r\n   `}\r\n       \r\n       pracimg={img5}\r\n            />   \r\n               </>\r\n    )\r\n}\r\n\r\n\r\n\r\nfunction DBMSPrac6() {\r\n    return (\r\n        <>\r\n        <ProgramTemp\r\n               pracName = \"Practical 6\"\r\n               code ={`mysql>  USE Practical6;\r\nmysql> CREATE TABLE EMPLOYEE(EmpNo INT, EName VARCHAR(10), DeptNo INT, Age INT, Desgination VARCHAR(10),JDate DATE, Salary INT, Gender CHAR(2), City VARCHAR(10), District VARCHAR(10), Country VARCHAR(10));\r\nmysql> INSERT INTO EMPLOYEE VALUES\r\n   -> (10,'Rajesh',1,48,'Manager','2017-08-11',50000,'M','AMARAVTI','MH','IND'),\r\n   -> (11,'Prathmesh',2,25,'Clerk','2011-09-05',15000,'M','PUNE','MH','IND'),\r\n   -> (13,'Leena',4,28,'Sale','2020-05-20',13000,'F','NAGPUR','MH','IND'),\r\n   -> (14,'Reeta',3,30,'Production','2019-02-25',30000,'F','MUMBAI','MP','IND'),\r\n   -> (15,'Raj',2,38,'Management','2010-05-22',10000,'M','MUMBAI','UP','IND'),\r\n   -> (16,'Sandeep',3,35,'Manager','2017-06-22',28000,'M','PUNE','MH','IND'),\r\n   -> (20,'Anuj',4,29,'Clerk','2019-06-03',11000,'M','NAGPUR','ML','IND');\r\n   \r\n   mysql> SELECT UPPER(Ename) FROM employee WHERE (Salary>15000) AND (City=\"AMARAVTI\");\r\n   \r\n   mysql> SELECT LOWER(EName),upper(Desgination) FROM employee WHERE (Salary>10000) AND age IN(20,25,30);\r\n   \r\n   mysql> SELECT EName,LENGTH(Desgination) AS \"Leghth\" FROM employee WHERE (EmpNo=20) AND (DeptNo=4);\r\n   \r\n   mysql> SELECT SUM(Salary) FROM employee WHERE city=\"MUMBAI\";\r\n   \r\n   mysql> SELECT AVG(Salary) FROM employee WHERE Age BETWEEN 21 AND 30;\r\n   \r\n   mysql> SELECT COUNT(*) AS \"Emp Count\" FROM employee where (Salary<15000) AND (City=\"NAGPUR\");\r\n   \r\n   mysql> SELECT MAX(Salary) FROM employee WHERE (City=\"PUNE\") AND (Desgination=\"Manager\");\r\n   \r\n   mysql> SELECT COUNT(*) AS \"OUTPUT\" FROM employee WHERE (EName like \"P%\") AND (Salary>5000 AND Salary<20000); \r\n   \r\n   mysql> SELECT * FROM employee WHERE Salary < ALL(SELECT AVG(Salary) FROM EMPLOYEE);\r\n   \r\n   mysql> SELECT EmpNo,EName,Age,City FROM EMPLOYEE WHERE Age=(SELECT MIN(Age) FROM EMPLOYEE);\r\n   \r\n   mysql> SELECT EmpNo,DeptNo,EName,Age,City,Country FROM EMPLOYEE WHERE Age=(SELECT MAX(Age) FROM EMPLOYEE WHERE City=\"PUNE\");\r\n   `}\r\n       \r\n       pracimg={img6}\r\n            />   \r\n               </>\r\n    )\r\n}\r\n\r\n\r\n\r\nfunction DBMSPrac7() {\r\n    return (\r\n        <>\r\n        <ProgramTemp\r\n               pracName = \"Practical 7\"\r\n               code ={`mysql> CREATE DATABASE Practical7;\r\nmysql>  USE Practical7;\r\n\r\nmysql> CREATE TABLE CUSTOMER (CID INT, CName VARCHAR(20), PhoneNo LONG, Country VARCHAR(10));\r\nmysql> INSERT INTO CUSTOMER VALUES\r\n   -> (10,'Ram',1234567890,'IND'),(11,'John',2345617897,'USA'),\r\n   -> (12,'Smith',4561237809,'AUS'),(13,'Cris',6341528970,'WI'),\r\n   -> (14,'Devid',7812459630,'NZ');\r\n\r\nmysql> CREATE TABLE C_ORDER (OID INT, CID INT, O_Date DATE);\r\nmysql> INSERT INTO C_ORDER VALUES\r\n   -> (100,14,'2018-08-15'),(101,12,'2020-10-10'),\r\n   -> (102,10,'2010-11-30'),(103,14,'2019-05-25');\r\n   \r\n   mysql> SELECT CName, OID FROM CUSTOMER CROSS JOIN C_ORDER;\r\n   \r\n   mysql> SELECT CUSTOMER.CName, C_ORDER.OID FROM CUSTOMER INNER JOIN C_ORDER ON CUSTOMER.CID = C_ORDER.CID;\r\n   \r\n   mysql> SELECT CUSTOMER.CName, C_ORDER.OID FROM CUSTOMER LEFT JOIN C_ORDER ON CUSTOMER.CID = C_ORDER.CID;\r\n   \r\n   mysql> SELECT CUSTOMER.CName, C_ORDER.OID FROM CUSTOMER RIGHT JOIN C_ORDER ON CUSTOMER.CID = C_ORDER.CID;`}\r\n       \r\n       pracimg={img7}\r\n            />   \r\n               </>\r\n    )\r\n}\r\n\r\n\r\n\r\nfunction DBMSPrac8() {\r\n    return (\r\n        <>\r\n        <ProgramTemp\r\n               pracName = \"Practical 8\"\r\n               code ={`>mysql> CREATE DATABASE Practical8;\r\nmysql>  USE Practical8;\r\nmysql> CREATE TABLE Acc (AccNo INT, AccName VARCHAR(20), Balance INT);\r\nmysql> INSERT INTO Acc VALUES\r\n   -> (10,'Ram',10000), (11,'John',50000),\r\n   -> (12,'Smith',5500), (13,'Cris',8000),\r\n   -> (14,'Suresh',15000);\r\n   \r\n   mysql> START  TRANSACTION;\r\nmysql> SAVEPOINT s1;\r\nmysql>  Update ACC SET Balance=Balance-5000 where AccNo=10;\r\nmysql>  Update ACC SET Balance=Balance+5000 where AccNo=14;\r\nmysql> commit;\r\nmysql> SELECT * FROM Acc;\r\n \r\n mysql> START  TRANSACTION;\r\nmysql> SAVEPOINT s2;\r\nmysql>  Update ACC SET Balance=Balance-2500 where AccNo=11;\r\nmysql>  Update ACC SET Balance=Balance+2500 where AccNo=12;\r\nmysql> ROLLBACK s2;\r\nmysql> SELECT * FROM Acc;`}\r\n       \r\n       pracimg={img8}\r\n            />   \r\n               </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default DBMSPrac1;\r\nexport {DBMSPrac2,DBMSPrac3,DBMSPrac4,DBMSPrac5,DBMSPrac6,DBMSPrac7,DBMSPrac8};","import React from 'react';\r\nimport List from \"../../List\";\r\n\r\nfunction DSPlist() {\r\n    return (\r\n         <div className=\"main-list row mt-5 container \" >\r\n            <h2>Digital Signal Processing</h2>\r\n            <hr/>\r\n            \r\n            <List\r\n            prac = \"Practical 1\"\r\n            aim = \"Introduction to Matlab, Basic Elements & Plotting Function in Matlab\"\r\n            link=\"/my_cse/Seventh/DSPlist/DSPPrac1\"\r\n             />\r\n\r\n<List\r\n            prac = \"Practical 2\"\r\n            aim = \"Implement sampling theorem using Matlab tool - Calculate maximum frequncy & Calculate sampling frequency\"\r\n            link=\"/my_cse/Seventh/DSPlist/DSPPrac2\"\r\n             />\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DSPlist\r\n","export default __webpack_public_path__ + \"static/media/DSP Practical 1.4eaa4a56.jpg\";","export default __webpack_public_path__ + \"static/media/DSP Practical 2.2846d7a8.jpg\";","import React from 'react'\r\nimport ProgramTemp from \"../../ProgramTemp\";\r\n\r\nimport img1 from \"../images7th/DSP Practical 1.jpg\";\r\nimport img2 from \"../images7th/DSP Practical 2.jpg\";\r\n\r\n\r\n\r\nfunction DSPPrac1() {\r\n    return (\r\n        <div>\r\n            <ProgramTemp\r\n            pracName=\"Practical 1\"\r\n            code={`t = (-1:0.01:1);\r\nimpulse = t == 0;\r\nunitstep = t>= 0;\r\nramp = t.*unitstep;\r\nquad = t.^2.*unitstep;\r\n\r\nplot(t,[impulse unitstep ramp quad])`}\r\n            pracimg={img1}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction DSPPrac2() {\r\n    return (\r\n        <div>\r\n            <ProgramTemp\r\n            pracName=\"Practical 2\"\r\n            code={`X = 0:0.001:0.1;\r\nf = 15;\r\nY = sin(2*pi*f*X);\r\nsubplot(4,2,1);\r\nplot(X,Y);\r\nsubplot(4,2,2);\r\nstem(X,Y);\r\n\r\ns = 10;a\r\nn = 0:1/s:0.1;\r\nX1 = sin(2*pi*f*n);\r\nsubplot(4,2,3);\r\nplot(n,X1);\r\nsubplot(4,2,4);\r\nstem(n,X1);\r\n\r\ng = 30;\r\nn = 0:1/g:0.1;\r\nX2 = sin(2*pi*f*n);\r\nsubplot(4,2,5);\r\nplot(n,X2);\r\nsubplot(4,2,6);\r\nstem(n,X2);\r\n\r\nk = 300;\r\nn = 0:1/k:0.1;\r\nX3 = sin(2*pi*f*n);\r\nsubplot(4,2,7);\r\nplot(n,X3);\r\nsubplot(4,2,8);\r\nstem(n,X3);`}\r\n            pracimg={img2}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DSPPrac1\r\nexport {DSPPrac2}; ","import React from 'react';\r\nimport List from \"../../List\";\r\n\r\n\r\n\r\nfunction DAAlist() {\r\n    return (\r\n        <div className=\"main-list row mt-5 container \" >\r\n        <h2>Design Analysis of Algorithm</h2>\r\n        <hr/>\r\n        \r\n        <List\r\n        prac = \"Practical 1\"\r\n        aim = \"Write a C program for Linear Search and Binary Search\"\r\n        link=\"/my_cse/Seventh/DAAlist/DAAPrac1\"\r\n         />\r\n\r\n<List\r\n        prac = \"Practical 2\"\r\n        aim = \"Implement and validate Divide and Conqure strategy using merge sort Algorithm and determine complexity of the Algorithm\"\r\n        link=\"/my_cse/Seventh/DAAlist/DAAPrac2\"\r\n         />\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DAAlist\r\n","export default __webpack_public_path__ + \"static/media/DAA Practical 1.f6afaa38.jpg\";","export default __webpack_public_path__ + \"static/media/DAA Practical 2.8bacf683.jpg\";","import React from 'react'\r\nimport ProgramTemp from \"../../ProgramTemp\";\r\n\r\nimport img1 from \"../images7th/DAA Practical 1.jpg\";\r\nimport img2 from \"../images7th/DAA Practical 2.jpg\";\r\n\r\n\r\n\r\nfunction DAAPrac1() {\r\n    return (\r\n        <div>\r\n            <ProgramTemp\r\n            pracName=\"Practical 1\"\r\n            code={`#include&lt;stdio.h> \r\n\r\nvoid linearSearch(int a[],int n, int x) {\t \r\n  int i,t; \r\n  for(i=0;i&lt;n;i++) { \r\n    if(a[i]==x){ \r\n      t=i; \r\n      break; \r\n      } \r\n    } \r\n  if(t!=0) \r\n  printf(\"\\nElement is found at location :%d\",i+1); \r\n  else \r\n  printf(\"\\nSorry !! Element is not found\\n\\n\"); \r\n  } \r\n\r\nvoid binarySerach(int a[],int n, int no){ \r\n  int f=0; \r\n  int l=n-1; \r\n  int mid = (f+l)/2; \r\n  \r\n  while(f&lt;=l) { \r\n    if(a[mid]&lt;no) \r\n      f=mid+1; \r\n    else if(a[mid]==no) { \r\n      printf(\"%d is found at %d \\n\",no,mid+1);\t \r\n      break; \r\n      } \r\n    else \r\n      l=mid-1; \r\n    \r\n    mid=(f+l)/2;     \r\n    } \r\n  if(f>l) \r\n    printf(\"Not found !\"); \r\n  } \r\n\r\nvoid main(){\r\n  int n,a[10],i,x,ch;\r\n  \r\n  printf(\"Enter the no of element:: \");\r\n  scanf(\"%d\",&n);\r\n\r\n  for(i=0;i&lt;n;i++){\r\n    printf(\"Enter the array %d element :: \",i+1);\r\n    scanf(\"%d\",&a[i]);\r\n    }\r\n  printf(\"\\n\");\r\n\r\n  do{\r\n    printf(\"\\nEnter the serach element :: \");\r\n    scanf(\"%d\",&x);\r\n\r\n    printf(\"\\n\\n0 Exit\");\r\n    printf(\"\\n1 Linear Search\");\t\r\n    printf(\"\\n2 Binary Search\");\r\n\r\n    printf(\"\\n\\nEnter the serach Chiose :: \");\r\n    scanf(\"%d\",&ch);\r\n\r\n    if(ch==1){\r\n      printf(\"\\nOutput by Linear Search: \\n\");\r\n      linearSearch(a,n,x);\r\n      }\r\n    else if(ch==2){\r\n      printf(\"\\nOutput by Binary Search: \\n\");\r\n      binarySerach(a,n,x);\r\n      }\r\n\r\n    printf(\"\\n\");\r\n    }while(ch);\r\n\r\n  } `}\r\n            pracimg={img1}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction DAAPrac2(){\r\n    return(\r\n        <>\r\n <ProgramTemp\r\n            pracName=\"Practical 2\"\r\n            code={`#include&lt;stdio.h> \r\n    #define max 10\r\n    int a[max], b[max];\r\n\r\n    void merge(int low, int mid, int high) {\r\n        int l1, l2, i;\r\n\r\n        for(l1 = low, l2 = mid + 1, i = low; l1 <= mid && l2 <= high; i++) {\r\n            if(a[l1] <= a[l2])\r\n            b[i] = a[l1++];\r\n            else\r\n            b[i] = a[l2++];\r\n          }\r\n\r\n        while(l1 <= mid)    \r\n            b[i++] = a[l1++];\r\n\r\n        while(l2 <= high)   \r\n            b[i++] = a[l2++];\r\n\r\n        for(i = low; i <= high; i++)\r\n            a[i] = b[i];\r\n      }\r\n\r\n    void mergesort(int low, int high) {\r\n        int mid;\r\n\r\n        if(low < high) {\r\n            mid = low  + (high - low) / 2;\r\n            mergesort(low, mid);\r\n            mergesort(mid+1, high);\r\n            merge(low, mid, high);\r\n          } \r\n        else return;\t\r\n      }\r\n\r\n    void main() { \r\n        int i;\r\n\r\n        printf(\"Enter the 10 elements :: \");\r\n        for(i = 0; i < max; i++)\r\n            scanf(\"%d\", &a[i]);\r\n\r\n        mergesort(0, max-1);\r\n\r\n        printf(\"\\n\\nOutput of Merge Sort\\n\\t\");\r\n\r\n        for(i = 0; i < max; i++)\r\n            printf(\"%d \", a[i]);\r\n      }`}\r\n            pracimg={img2}\r\n\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default DAAPrac1\r\nexport {DAAPrac2}","import './App.css';\nimport {BrowserRouter, Switch, Route} from \"react-router-dom\";\nimport Fifth from \"./Fifth\";\nimport Sixth from \"./Sixth\";\nimport Seventh from './Seventh';\nimport Menu from './Menu';\nimport Home from './Home';\n\n// parcticals link\n// 5th semester//\nimport SSlist from \"./5thSem/ss/SSlist\";\n// SS practicals\nimport Prac1a from \"./5thSem/ss/Prac1a\";\nimport {Prac1b, Prac2, Prac3, Prac4, Prac6, Prac7, Prac8} from \"./5thSem/ss/Prac1a\";\n\nimport STLDlist from \"./5thSem/stld/STLDlist\";\n// STLD Practicals\nimport StldPrac1 from './5thSem/stld/StldPrac1';\nimport {StldPrac5, StldPrac2, StldPrac3, StldPrac4, StldPrac6, StldPrac7, StldPrac8} from \"./5thSem/stld/StldPrac1\";\n\n\n//6th semester//\n// os practicals\nimport OSlist from \"./6thSem/os/OSlist\";\nimport OsPrac1 from './6thSem/os/OsPrac1';\nimport {OsPrac2,OsPrac3,OsPrac4,OsPrac5,OsPrac6,OsPrac7,OsPrac8} from \"./6thSem/os/OsPrac1\";\n// Dbms practicals\nimport DBMSlist from \"./6thSem/dbms/DBMSlist\";\nimport DBMSPrac1 from './6thSem/dbms/DBMSPrac1';\nimport {DBMSPrac2,DBMSPrac3,DBMSPrac4,DBMSPrac5,DBMSPrac6,DBMSPrac7,DBMSPrac8} from \"./6thSem/dbms/DBMSPrac1\";\n\n\n// 7th Semester//\n//Dsp practicals\nimport DSPlist from './7thSem/dsp/DSPlist';\nimport DSPPrac1 from './7thSem/dsp/DSPPrac1';\nimport {DSPPrac2} from \"./7thSem/dsp/DSPPrac1\";\n\n\n// DAA\nimport DAAlist from \"./7thSem/daa/DAAlist\";\nimport DAAPrac1 from \"./7thSem/daa/DAAPrac1\";\nimport {DAAPrac2} from \"./7thSem/daa/DAAPrac1\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n  <BrowserRouter>    \n  <Menu/>\n    <Switch>\n{/* main navigation links */}\n<Route exact path=\"/my_cse/Fifth\"> <Fifth/> </Route>\n<Route exact path=\"/my_cse/Sixth\"><Sixth/></Route>\n<Route exact path=\"/my_cse/Seventh\"><Seventh/></Route>\n<Route exact path=\"/my_cse/\" ><Home/></Route>\n\n\n{/* fifth sem practical links */}\n<Route exact path=\"/my_cse/Fifth/SSlist\"><SSlist/></Route>\n{/* Programs of SS */}\n<Route exact path=\"/my_cse/Fifth/SSlist/Prac1a\"> <Prac1a/> </Route>\n<Route exact path=\"/my_cse/Fifth/SSlist/Prac1b\"> <Prac1b/> </Route>\n<Route exact path=\"/my_cse/Fifth/SSlist/Prac2\"> <Prac2/> </Route>\n<Route exact path=\"/my_cse/Fifth/SSlist/Prac3\"> <Prac3/> </Route>\n<Route exact path=\"/my_cse/Fifth/SSlist/Prac4\"> <Prac4/> </Route>\n<Route exact path=\"/my_cse/Fifth/SSlist/Prac6\"> <Prac6/> </Route>\n<Route exact path=\"/my_cse/Fifth/SSlist/Prac7\"> <Prac7/> </Route>\n<Route exact path=\"/my_cse/Fifth/SSlist/Prac8\"> <Prac8/> </Route>\n\n\n<Route exact path=\"/my_cse/Fifth/STLDlist\"><STLDlist/></Route>\n{/* programs of STLd */}\n<Route exact path=\"/my_cse/Fifth/STLDlist/StldPrac1\"> <StldPrac1/> </Route>\n<Route exact path=\"/my_cse/Fifth/STLDlist/StldPrac2\"> <StldPrac2/> </Route>\n<Route exact path=\"/my_cse/Fifth/STLDlist/StldPrac3\"> <StldPrac3/> </Route>\n<Route exact path=\"/my_cse/Fifth/STLDlist/StldPrac4\"> <StldPrac4/> </Route>\n<Route exact path=\"/my_cse/Fifth/STLDlist/StldPrac5\"> <StldPrac5/> </Route>\n<Route exact path=\"/my_cse/Fifth/STLDlist/StldPrac6\"> <StldPrac6/> </Route>\n<Route exact path=\"/my_cse/Fifth/STLDlist/StldPrac7\"> <StldPrac7/> </Route>\n<Route exact path=\"/my_cse/Fifth/STLDlist/StldPrac8\"> <StldPrac8/> </Route>\n\n\n{/* 6th semester */}\n{/* os pracitcal links */}\n<Route exact path=\"/my_cse/Sixth/OSlist\"><OSlist/></Route>\n<Route exact path=\"/my_cse/Sixth/OSlist/OSPrac1\"> <OsPrac1/> </Route>\n<Route exact path=\"/my_cse/Sixth/OSlist/OSPrac2\"> <OsPrac2/> </Route>\n<Route exact path=\"/my_cse/Sixth/OSlist/OSPrac3\"> <OsPrac3/> </Route>\n<Route exact path=\"/my_cse/Sixth/OSlist/OSPrac4\"> <OsPrac4/> </Route>\n<Route exact path=\"/my_cse/Sixth/OSlist/OSPrac5\"> <OsPrac5/> </Route>\n<Route exact path=\"/my_cse/Sixth/OSlist/OSPrac6\"> <OsPrac6/> </Route>\n<Route exact path=\"/my_cse/Sixth/OSlist/OSPrac7\"> <OsPrac7/> </Route>\n<Route exact path=\"/my_cse/Sixth/OSlist/OSPrac8\"> <OsPrac8/> </Route>\n\n{/* DBMS practicals */}\n<Route exact path=\"/my_cse/Sixth/DBMSlist\"><DBMSlist/></Route>\n<Route exact path=\"/my_cse/Sixth/DBMSlist/DBMSPrac1\"> <DBMSPrac1/> </Route>\n<Route exact path=\"/my_cse/Sixth/DBMSlist/DBMSPrac2\"> <DBMSPrac2/> </Route>\n<Route exact path=\"/my_cse/Sixth/DBMSlist/DBMSPrac3\"> <DBMSPrac3/> </Route>\n<Route exact path=\"/my_cse/Sixth/DBMSlist/DBMSPrac4\"> <DBMSPrac4/> </Route>\n<Route exact path=\"/my_cse/Sixth/DBMSlist/DBMSPrac5\"> <DBMSPrac5/> </Route>\n<Route exact path=\"/my_cse/Sixth/DBMSlist/DBMSPrac6\"> <DBMSPrac6/> </Route>\n<Route exact path=\"/my_cse/Sixth/DBMSlist/DBMSPrac7\"> <DBMSPrac7/> </Route>\n<Route exact path=\"/my_cse/Sixth/DBMSlist/DBMSPrac8\"> <DBMSPrac8/> </Route>\n\n\n\n{/* 7th Semester */}\n{/* DSP */}\n<Route exact path=\"/my_cse/Seventh/DSPlist\"><DSPlist/></Route>\n<Route exact path=\"/my_cse/Seventh/DSPlist/DSPPrac1\"> <DSPPrac1/> </Route>\n<Route exact path=\"/my_cse/Seventh/DSPlist/DSPPrac2\"> <DSPPrac2/> </Route>\n\n{/* DAA */}\n<Route exact path=\"/my_cse/Seventh/DAAlist\"><DAAlist/></Route>\n<Route exact path=\"/my_cse/Seventh/DAAlist/DAAPrac1\"> <DAAPrac1/> </Route>\n<Route exact path=\"/my_cse/Seventh/DAAlist/DAAPrac2\"> <DAAPrac2/> </Route>\n\n\n</Switch>\n</BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}